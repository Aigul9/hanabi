{"ast":null,"code":"var _jsxFileName = \"/Users/sarahmamy/Workspace/hanabi/src/components/discardArea.tsx\";\nvar __jsx = React.createElement;\nimport classnames from \"classnames\";\nimport { chunk, groupBy, sortBy } from \"lodash\";\nimport React from \"react\";\nimport Card, { CardSize, CardWrapper, ICardContext } from \"./card\";\nimport Txt from \"./ui/txt\";\nimport { getColors } from \"../game/actions\";\nimport { useGame } from \"../hooks/game\";\n\nfunction CardPile(props) {\n  var cards = props.cards,\n      color = props.color;\n\n  if (!cards.length) {\n    return __jsx(\"div\", {\n      className: \"w-50 mw6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(CardWrapper, {\n      className: \"mr1\",\n      color: color,\n      size: CardSize.MEDIUM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n  var sortedCards = sortBy(cards, function (card) {\n    return card.number;\n  });\n  return __jsx(\"div\", {\n    className: \"flex w-50 mw6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, sortedCards.map(function (card, i) {\n    return __jsx(Card, {\n      key: i,\n      card: card,\n      className: classnames(\"mr1\", {\n        \"nl2 nl3-l\": i > 0\n      }),\n      context: ICardContext.DISCARDED,\n      size: CardSize.MEDIUM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }));\n}\n\nexport default function DiscardArea(props) {\n  var onCloseArea = props.onCloseArea;\n  var game = useGame();\n  var byColor = groupBy(sortBy(game.discardPile, function (card) {\n    return card.number;\n  }), function (card) {\n    return card.color;\n  });\n  var rows = chunk(getColors(game), 2);\n  return __jsx(\"div\", {\n    className: \"relative flex flex-column flex-grow-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex flex-column w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, rows.map(function (colors, i) {\n    return __jsx(\"div\", {\n      key: i,\n      className: classnames(\"w-100 flex\", {\n        mt2: i > 0\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, colors.map(function (color) {\n      return __jsx(CardPile, {\n        key: color,\n        cards: byColor[color] || [],\n        color: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    }));\n  }), __jsx(\"a\", {\n    className: \"absolute right-0 top-0 mr2 mt2\",\n    onClick: function onClick() {\n      return onCloseArea();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Txt, {\n    className: \"ml2\",\n    value: \"\\xD7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/components/discardArea.tsx"],"names":["classnames","chunk","groupBy","sortBy","React","Card","CardSize","CardWrapper","ICardContext","Txt","getColors","useGame","CardPile","props","cards","color","length","MEDIUM","sortedCards","card","number","map","i","DISCARDED","DiscardArea","onCloseArea","game","byColor","discardPile","rows","colors","mt2"],"mappings":"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","sourcesContent":["import classnames from \"classnames\";\nimport { chunk, groupBy, sortBy } from \"lodash\";\nimport React from \"react\";\n\nimport Card, { CardSize, CardWrapper, ICardContext } from \"~/components/card\";\nimport Txt, { TxtSize } from \"~/components/ui/txt\";\nimport { getColors } from \"~/game/actions\";\nimport { ICard, IColor } from \"~/game/state\";\nimport { useGame } from \"~/hooks/game\";\n\ninterface CardPileProps {\n  cards: ICard[];\n  color: IColor;\n}\n\nfunction CardPile(props: CardPileProps) {\n  const { cards, color } = props;\n\n  if (!cards.length) {\n    return (\n      <div className=\"w-50 mw6\">\n        <CardWrapper className=\"mr1\" color={color} size={CardSize.MEDIUM} />\n      </div>\n    );\n  }\n\n  const sortedCards = sortBy(cards, card => card.number);\n\n  return (\n    <div className=\"flex w-50 mw6\">\n      {sortedCards.map((card, i) => (\n        <Card\n          key={i}\n          card={card}\n          className={classnames(\"mr1\", { \"nl2 nl3-l\": i > 0 })}\n          context={ICardContext.DISCARDED}\n          size={CardSize.MEDIUM}\n        />\n      ))}\n    </div>\n  );\n}\n\ninterface Props {\n  onCloseArea: Function;\n}\n\nexport default function DiscardArea(props: Props) {\n  const { onCloseArea } = props;\n\n  const game = useGame();\n\n  const byColor = groupBy(\n    sortBy(game.discardPile, card => card.number),\n    card => card.color\n  );\n\n  const rows = chunk(getColors(game), 2);\n\n  return (\n    <div className=\"relative flex flex-column flex-grow-1\">\n      <div className=\"flex flex-column w-100\">\n        {rows.map((colors, i) => {\n          return (\n            <div key={i} className={classnames(\"w-100 flex\", { mt2: i > 0 })}>\n              {colors.map(color => {\n                return (\n                  <CardPile\n                    key={color}\n                    cards={byColor[color] || []}\n                    color={color}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n        <a\n          className=\"absolute right-0 top-0 mr2 mt2\"\n          onClick={() => onCloseArea()}\n        >\n          <Txt className=\"ml2\" value=\"Ã—\" />\n        </a>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}