{"ast":null,"code":"export async function playSound(path) {\n  new Audio(path).play().catch(e => {\n    // Playing a sound before any user interaction triggers an error\n    // Prevent it from polluting the error logs\n    // @see https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n    if (e.name === \"NotAllowedError\") {\n      return;\n    }\n\n    throw e;\n  });\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/game/sound.ts"],"names":["playSound","path","Audio","play","catch","e","name"],"mappings":"AAAA,OAAO,eAAeA,SAAf,CAAyBC,IAAzB,EAAuC;AAC5C,MAAIC,KAAJ,CAAUD,IAAV,EAAgBE,IAAhB,GAAuBC,KAAvB,CAA6BC,CAAC,IAAI;AAChC;AACA;AACA;AACA,QAAIA,CAAC,CAACC,IAAF,KAAW,iBAAf,EAAkC;AAChC;AACD;;AAED,UAAMD,CAAN;AACD,GATD;AAUD","sourcesContent":["export async function playSound(path: string) {\n  new Audio(path).play().catch(e => {\n    // Playing a sound before any user interaction triggers an error\n    // Prevent it from polluting the error logs\n    // @see https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n    if (e.name === \"NotAllowedError\") {\n      return;\n    }\n\n    throw e;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}