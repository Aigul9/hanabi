{"ast":null,"code":"var _jsxFileName = \"/Users/sarahmamy/Workspace/hanabi/src/components/loadingScreen.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport posed from \"react-pose\";\nimport Txt, { TxtSize } from \"./ui/txt\";\nconst Animation = posed.div({\n  attention: {\n    opacity: 0.7,\n    transition: {\n      type: \"spring\",\n      stiffness: 10,\n      damping: 0\n    }\n  }\n});\nexport default function LoadingScreen() {\n  const {\n    0: pose,\n    1: setPose\n  } = useState(null);\n  useEffect(() => {\n    const interval = setTimeout(() => setPose(\"attention\"), 100);\n    return () => clearInterval(interval);\n  });\n  return __jsx(\"div\", {\n    className: \"w-100 h-100 flex flex-column justify-center items-center bg-main-dark pa2 pv4-l ph3-l shadow-5 br3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Animation, {\n    pose: pose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(Txt, {\n    size: TxtSize.LARGE,\n    value: \"Loading...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/components/loadingScreen.tsx"],"names":["React","useEffect","useState","posed","Txt","TxtSize","Animation","div","attention","opacity","transition","type","stiffness","damping","LoadingScreen","pose","setPose","interval","setTimeout","clearInterval","LARGE"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,OAAOC,GAAP,IAAcC,OAAd,QAA6B,UAA7B;AAEA,MAAMC,SAAS,GAAGH,KAAK,CAACI,GAAN,CAAU;AAC1BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,GADA;AAETC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,QADI;AAEVC,MAAAA,SAAS,EAAE,EAFD;AAGVC,MAAAA,OAAO,EAAE;AAHC;AAFH;AADe,CAAV,CAAlB;AAWA,eAAe,SAASC,aAAT,GAAyB;AACtC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBd,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,QAAQ,GAAGC,UAAU,CAAC,MAAMF,OAAO,CAAC,WAAD,CAAd,EAA6B,GAA7B,CAA3B;AAEA,WAAO,MAAMG,aAAa,CAACF,QAAD,CAA1B;AACD,GAJQ,CAAT;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,oGAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEF,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAEV,OAAO,CAACe,KAAnB;AAA0B,IAAA,KAAK,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport posed from \"react-pose\";\n\nimport Txt, { TxtSize } from \"~/components/ui/txt\";\n\nconst Animation = posed.div({\n  attention: {\n    opacity: 0.7,\n    transition: {\n      type: \"spring\",\n      stiffness: 10,\n      damping: 0\n    }\n  }\n});\n\nexport default function LoadingScreen() {\n  const [pose, setPose] = useState(null);\n\n  useEffect(() => {\n    const interval = setTimeout(() => setPose(\"attention\"), 100);\n\n    return () => clearInterval(interval);\n  });\n\n  return (\n    <div className=\"w-100 h-100 flex flex-column justify-center items-center bg-main-dark pa2 pv4-l ph3-l shadow-5 br3\">\n      <Animation pose={pose}>\n        <Txt size={TxtSize.LARGE} value=\"Loading...\" />\n      </Animation>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}