{"ast":null,"code":"var _jsxFileName = \"/Users/sarahmamy/Workspace/hanabi/src/components/turn.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Card, { CardSize, ICardContext } from \"./card\";\nimport Hint from \"./hint\";\nimport PlayerName from \"./playerName\";\nimport Txt from \"./ui/txt\";\nimport { IHintLevel } from \"../game/state\";\nimport { useGame } from \"../hooks/game\";\nexport default function Turn(props) {\n  var turn = props.turn,\n      _props$includePlayer = props.includePlayer,\n      includePlayer = _props$includePlayer === void 0 ? false : _props$includePlayer,\n      showDrawn = props.showDrawn;\n  var game = useGame();\n  return __jsx(\"div\", {\n    className: \"di mb2 pre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, includePlayer && __jsx(React.Fragment, null, __jsx(PlayerName, {\n    player: game.players[turn.action.from],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), __jsx(Txt, {\n    value: \" \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), turn.action.action === \"hint\" && __jsx(Txt, {\n    className: \"inline-flex items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"hinted \", __jsx(PlayerName, {\n    player: game.players[turn.action.to],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), \" about \", __jsx(Hint, {\n    hint: IHintLevel.POSSIBLE,\n    type: turn.action.type,\n    value: turn.action.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), turn.action.type === \"color\" && \" cards\", turn.action.type === \"number\" && \"s\"), turn.action.action === \"discard\" && __jsx(Txt, {\n    className: \"inline-flex items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"discarded \", __jsx(Card, {\n    card: turn.action.card,\n    context: ICardContext.DISCARDED,\n    size: CardSize.SMALL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), turn.action.action === \"play\" && __jsx(Txt, {\n    className: \"inline-flex items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"played \", __jsx(Card, {\n    card: turn.action.card,\n    context: ICardContext.PLAYED,\n    size: CardSize.SMALL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), showDrawn && turn.card && __jsx(Txt, {\n    className: \"inline-flex items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \" & drew \", __jsx(Card, {\n    card: turn.card,\n    context: ICardContext.DRAWN,\n    size: CardSize.SMALL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/components/turn.tsx"],"names":["React","Card","CardSize","ICardContext","Hint","PlayerName","Txt","IHintLevel","useGame","Turn","props","turn","includePlayer","showDrawn","game","players","action","from","to","POSSIBLE","type","value","card","DISCARDED","SMALL","PLAYED","DRAWN"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Card, { CardSize, ICardContext } from \"~/components/card\";\nimport Hint from \"~/components/hint\";\nimport PlayerName from \"~/components/playerName\";\nimport Txt from \"~/components/ui/txt\";\nimport { IHintLevel, ITurn } from \"~/game/state\";\nimport { useGame } from \"~/hooks/game\";\n\ninterface Props {\n  turn: ITurn;\n  includePlayer: boolean;\n  showDrawn: boolean;\n}\n\nexport default function Turn(props: Props) {\n  const { turn, includePlayer = false, showDrawn } = props;\n\n  const game = useGame();\n\n  return (\n    <div className=\"di mb2 pre\">\n      {includePlayer && (\n        <>\n          <PlayerName player={game.players[turn.action.from]} />\n          <Txt value=\" \" />\n        </>\n      )}\n\n      {turn.action.action === \"hint\" && (\n        <Txt className=\"inline-flex items-center\">\n          {\"hinted \"}\n          <PlayerName player={game.players[turn.action.to]} />\n          {\" about \"}\n          <Hint\n            hint={IHintLevel.POSSIBLE}\n            type={turn.action.type}\n            value={turn.action.value}\n          />\n          {turn.action.type === \"color\" && \" cards\"}\n          {turn.action.type === \"number\" && \"s\"}\n        </Txt>\n      )}\n\n      {turn.action.action === \"discard\" && (\n        <Txt className=\"inline-flex items-center\">\n          {\"discarded \"}\n          <Card\n            card={turn.action.card}\n            context={ICardContext.DISCARDED}\n            size={CardSize.SMALL}\n          />\n        </Txt>\n      )}\n\n      {turn.action.action === \"play\" && (\n        <Txt className=\"inline-flex items-center\">\n          {\"played \"}\n          <Card\n            card={turn.action.card}\n            context={ICardContext.PLAYED}\n            size={CardSize.SMALL}\n          />\n        </Txt>\n      )}\n\n      {showDrawn && turn.card && (\n        <Txt className=\"inline-flex items-center\">\n          {\" & drew \"}\n          <Card\n            card={turn.card}\n            context={ICardContext.DRAWN}\n            size={CardSize.SMALL}\n          />\n        </Txt>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}