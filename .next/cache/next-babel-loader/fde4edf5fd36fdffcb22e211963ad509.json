{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _HintsLevels,\n    _jsxFileName = \"/Users/sarahmamy/Workspace/hanabi/src/pages/new-game.tsx\";\n\nvar __jsx = React.createElement;\nimport { keyBy } from \"lodash\";\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport shortid from \"shortid\";\nimport HomeButton from \"../components/homeButton\";\nimport Button, { ButtonSize } from \"../components/ui/button\";\nimport { Checkbox, Field, Select, TextInput } from \"../components/ui/forms\";\nimport Txt from \"../components/ui/txt\";\nimport { newGame } from \"../game/actions\";\nimport { GameMode, IGameHintsLevel } from \"../game/state\";\nimport useNetwork from \"../hooks/network\";\nvar PlayerCounts = [2, 3, 4, 5];\nvar HintsLevels = (_HintsLevels = {}, _defineProperty(_HintsLevels, IGameHintsLevel.DIRECT, \"Show direct hints\"), _defineProperty(_HintsLevels, IGameHintsLevel.NONE, \"Do not show hints\"), _HintsLevels);\nvar BotsSpeeds = {\n  0: \"Faster\",\n  1000: \"Fast\",\n  3000: \"Slow\"\n};\nexport default function NewGame() {\n  var router = useRouter();\n  var network = useNetwork();\n  var offline = router.query.offline;\n\n  var _useState = useState(false),\n      showAdvanced = _useState[0],\n      setShowAdvanced = _useState[1];\n\n  var _useState2 = useState(),\n      seed = _useState2[0],\n      setSeed = _useState2[1];\n\n  var _useState3 = useState(3),\n      playersCount = _useState3[0],\n      setPlayersCount = _useState3[1];\n\n  var _useState4 = useState(false),\n      multicolor = _useState4[0],\n      setMulticolor = _useState4[1];\n\n  var _useState5 = useState(true),\n      allowRollback = _useState5[0],\n      setAllowRollback = _useState5[1];\n\n  var _useState6 = useState(false),\n      preventLoss = _useState6[0],\n      setPreventLoss = _useState6[1];\n\n  var _useState7 = useState(false),\n      private_ = _useState7[0],\n      setPrivate = _useState7[1];\n\n  var _useState8 = useState(IGameHintsLevel.DIRECT),\n      hintsLevel = _useState8[0],\n      setHintsLevel = _useState8[1];\n\n  var _useState9 = useState(true),\n      turnsHistory = _useState9[0],\n      setTurnsHistory = _useState9[1];\n\n  var _useState10 = useState(1000),\n      botsWait = _useState10[0],\n      setBotsWait = _useState10[1];\n  /**\n   * Initialise seed on first render\n   */\n\n\n  useEffect(function () {\n    setSeed(\"\".concat(Math.round(Math.random() * 10000)));\n  }, []);\n\n  function onCreateGame() {\n    var gameId;\n    return _regeneratorRuntime.async(function onCreateGame$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            gameId = shortid();\n            network.updateGame(newGame({\n              id: gameId,\n              multicolor: multicolor,\n              playersCount: playersCount,\n              seed: seed,\n              allowRollback: allowRollback,\n              preventLoss: preventLoss,\n              \"private\": private_,\n              hintsLevel: hintsLevel,\n              turnsHistory: turnsHistory,\n              botsWait: botsWait,\n              gameMode: offline ? GameMode.PASS_AND_PLAY : GameMode.NETWORK\n            }));\n            router.push(\"/play?gameId=\".concat(gameId));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: \"w-100 h-100 overflow-y-scroll pv4 flex items-center pv6-l relative bg-main-dark ph2 ph3-l shadow-5 br3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(HomeButton, {\n    className: \"absolute top-1 right-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"flex flex-column w-50-m w-50-l w-80\",\n    style: {\n      margin: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"f4 pb4 lavender\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, offline ? \"In this pass-and-play mode, you can play offline with multiple\\n              players by passing the device to each player on their turn\" : \"You will be able to play online by sharing the game link to your\\n            friends.\"), __jsx(Field, {\n    className: \"pb2 mb2 bb b--yellow-light\",\n    label: \"Players\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Select, {\n    className: \"w3 indent\",\n    id: \"players-count\",\n    options: keyBy(PlayerCounts),\n    value: playersCount,\n    onChange: function onChange(e) {\n      return setPlayersCount(+e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), __jsx(Field, {\n    label: \"Multicolor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    checked: multicolor,\n    id: \"multicolor\",\n    onChange: function onChange(e) {\n      return setMulticolor(e.target.checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), __jsx(\"a\", {\n    className: \"mv4 self-end underline pointer silver\",\n    id: \"advanced-options\",\n    onClick: function onClick() {\n      return setShowAdvanced(!showAdvanced);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(Txt, {\n    value: \"Advanced options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), showAdvanced && __jsx(React.Fragment, null, __jsx(Field, {\n    className: \"pb2 mb2 bb b--yellow-light\",\n    label: \"Private\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    checked: private_,\n    onChange: function onChange(e) {\n      return setPrivate(e.target.checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), __jsx(Field, {\n    className: \"pb2 mb2 bb b--yellow-light\",\n    label: \"Seed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    className: \"w3 tr\",\n    id: \"seed\",\n    value: seed,\n    onChange: function onChange(e) {\n      return setSeed(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), __jsx(Field, {\n    className: \"pb2 mb2 bb b--yellow-light\",\n    label: \"Allow rollback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    checked: allowRollback,\n    onChange: function onChange(e) {\n      return setAllowRollback(e.target.checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), __jsx(Field, {\n    className: \"pb2 mb2 bb b--yellow-light\",\n    label: \"Prevent loss\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    checked: preventLoss,\n    onChange: function onChange(e) {\n      return setPreventLoss(e.target.checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), __jsx(Field, {\n    className: \"pb2 mb2 bb b--yellow-light\",\n    label: \"Hints\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(Select, {\n    className: \"pl3\",\n    options: HintsLevels,\n    value: hintsLevel,\n    onChange: function onChange(e) {\n      return setHintsLevel(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })), __jsx(Field, {\n    className: \"pb2 mb2 bb b--yellow-light\",\n    label: \"Turns history\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    checked: turnsHistory,\n    onChange: function onChange(e) {\n      return setTurnsHistory(e.target.checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })), __jsx(Field, {\n    label: \"Bots speed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, __jsx(Select, {\n    className: \"pl3\",\n    id: \"bots-speed\",\n    options: BotsSpeeds,\n    value: botsWait,\n    onChange: function onChange(e) {\n      return setBotsWait(+e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"flex flex-1 justify-end w-75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: \"flex-1 justify-end mt5\",\n    id: \"new-game\",\n    size: ButtonSize.LARGE,\n    text: \"New game\",\n    onClick: onCreateGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/pages/new-game.tsx"],"names":["keyBy","useRouter","React","useEffect","useState","shortid","HomeButton","Button","ButtonSize","Checkbox","Field","Select","TextInput","Txt","newGame","GameMode","IGameHintsLevel","useNetwork","PlayerCounts","HintsLevels","DIRECT","NONE","BotsSpeeds","NewGame","router","network","offline","query","showAdvanced","setShowAdvanced","seed","setSeed","playersCount","setPlayersCount","multicolor","setMulticolor","allowRollback","setAllowRollback","preventLoss","setPreventLoss","private_","setPrivate","hintsLevel","setHintsLevel","turnsHistory","setTurnsHistory","botsWait","setBotsWait","Math","round","random","onCreateGame","gameId","updateGame","id","gameMode","PASS_AND_PLAY","NETWORK","push","margin","e","target","value","checked","LARGE"],"mappings":";;;;;;;AAAA,SAASA,KAAT,QAAsB,QAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,yBAAnC;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,wBAAnD;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,eAA1C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,IAAMC,YAAY,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArB;AAEA,IAAMC,WAAW,qDACdH,eAAe,CAACI,MADF,EACW,mBADX,iCAEdJ,eAAe,CAACK,IAFF,EAES,mBAFT,gBAAjB;AAKA,IAAMC,UAAU,GAAG;AACjB,KAAG,QADc;AAEjB,QAAM,MAFW;AAGjB,QAAM;AAHW,CAAnB;AAMA,eAAe,SAASC,OAAT,GAAmB;AAChC,MAAMC,MAAM,GAAGvB,SAAS,EAAxB;AACA,MAAMwB,OAAO,GAAGR,UAAU,EAA1B;AAFgC,MAGxBS,OAHwB,GAGZF,MAAM,CAACG,KAHK,CAGxBD,OAHwB;;AAAA,kBAIQtB,QAAQ,CAAC,KAAD,CAJhB;AAAA,MAIzBwB,YAJyB;AAAA,MAIXC,eAJW;;AAAA,mBAKRzB,QAAQ,EALA;AAAA,MAKzB0B,IALyB;AAAA,MAKnBC,OALmB;;AAAA,mBAMQ3B,QAAQ,CAAC,CAAD,CANhB;AAAA,MAMzB4B,YANyB;AAAA,MAMXC,eANW;;AAAA,mBAOI7B,QAAQ,CAAC,KAAD,CAPZ;AAAA,MAOzB8B,UAPyB;AAAA,MAObC,aAPa;;AAAA,mBAQU/B,QAAQ,CAAC,IAAD,CARlB;AAAA,MAQzBgC,aARyB;AAAA,MAQVC,gBARU;;AAAA,mBASMjC,QAAQ,CAAC,KAAD,CATd;AAAA,MASzBkC,WATyB;AAAA,MASZC,cATY;;AAAA,mBAUDnC,QAAQ,CAAC,KAAD,CAVP;AAAA,MAUzBoC,QAVyB;AAAA,MAUfC,UAVe;;AAAA,mBAWIrC,QAAQ,CAACY,eAAe,CAACI,MAAjB,CAXZ;AAAA,MAWzBsB,UAXyB;AAAA,MAWbC,aAXa;;AAAA,mBAYQvC,QAAQ,CAAC,IAAD,CAZhB;AAAA,MAYzBwC,YAZyB;AAAA,MAYXC,eAZW;;AAAA,oBAaAzC,QAAQ,CAAC,IAAD,CAbR;AAAA,MAazB0C,QAbyB;AAAA,MAafC,WAbe;AAehC;;;;;AAGA5C,EAAAA,SAAS,CAAC,YAAM;AACd4B,IAAAA,OAAO,WAAIiB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CAAJ,EAAP;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAAeC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,MADR,GACiB/C,OAAO,EADxB;AAGEoB,YAAAA,OAAO,CAAC4B,UAAR,CACEvC,OAAO,CAAC;AACNwC,cAAAA,EAAE,EAAEF,MADE;AAENlB,cAAAA,UAAU,EAAVA,UAFM;AAGNF,cAAAA,YAAY,EAAZA,YAHM;AAINF,cAAAA,IAAI,EAAJA,IAJM;AAKNM,cAAAA,aAAa,EAAbA,aALM;AAMNE,cAAAA,WAAW,EAAXA,WANM;AAON,yBAASE,QAPH;AAQNE,cAAAA,UAAU,EAAVA,UARM;AASNE,cAAAA,YAAY,EAAZA,YATM;AAUNE,cAAAA,QAAQ,EAARA,QAVM;AAWNS,cAAAA,QAAQ,EAAE7B,OAAO,GAAGX,QAAQ,CAACyC,aAAZ,GAA4BzC,QAAQ,CAAC0C;AAXhD,aAAD,CADT;AAgBAjC,YAAAA,MAAM,CAACkC,IAAP,wBAA4BN,MAA5B;;AAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBA,SACE;AAAK,IAAA,SAAS,EAAC,wGAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,wBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,IAAA,SAAS,EAAC,qCADZ;AAEE,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjC,OAAO,wOADV,CAJF,EAWE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,4BAAjB;AAA8C,IAAA,KAAK,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,OAAO,EAAE1B,KAAK,CAACkB,YAAD,CAHhB;AAIE,IAAA,KAAK,EAAEc,YAJT;AAKE,IAAA,QAAQ,EAAE,kBAAA4B,CAAC;AAAA,aAAI3B,eAAe,CAAC,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAX,CAAnB;AAAA,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,EAqBE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAE5B,UADX;AAEE,IAAA,EAAE,EAAC,YAFL;AAGE,IAAA,QAAQ,EAAE,kBAAA0B,CAAC;AAAA,aAAIzB,aAAa,CAACyB,CAAC,CAACC,MAAF,CAASE,OAAV,CAAjB;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArBF,EA6BE;AACE,IAAA,SAAS,EAAC,uCADZ;AAEE,IAAA,EAAE,EAAC,kBAFL;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMlC,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CA7BF,EAqCGA,YAAY,IACX,4BACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,4BAAjB;AAA8C,IAAA,KAAK,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAEY,QADX;AAEE,IAAA,QAAQ,EAAE,kBAAAoB,CAAC;AAAA,aAAInB,UAAU,CAACmB,CAAC,CAACC,MAAF,CAASE,OAAV,CAAd;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,4BAAjB;AAA8C,IAAA,KAAK,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,KAAK,EAAEjC,IAHT;AAIE,IAAA,QAAQ,EAAE,kBAAA8B,CAAC;AAAA,aAAI7B,OAAO,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,EAiBE,MAAC,KAAD;AACE,IAAA,SAAS,EAAC,4BADZ;AAEE,IAAA,KAAK,EAAC,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,QAAD;AACE,IAAA,OAAO,EAAE1B,aADX;AAEE,IAAA,QAAQ,EAAE,kBAAAwB,CAAC;AAAA,aAAIvB,gBAAgB,CAACuB,CAAC,CAACC,MAAF,CAASE,OAAV,CAApB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAjBF,EA2BE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,4BAAjB;AAA8C,IAAA,KAAK,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAEzB,WADX;AAEE,IAAA,QAAQ,EAAE,kBAAAsB,CAAC;AAAA,aAAIrB,cAAc,CAACqB,CAAC,CAACC,MAAF,CAASE,OAAV,CAAlB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA3BF,EAkCE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,4BAAjB;AAA8C,IAAA,KAAK,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,OAAO,EAAE5C,WAFX;AAGE,IAAA,KAAK,EAAEuB,UAHT;AAIE,IAAA,QAAQ,EAAE,kBAAAkB,CAAC;AAAA,aAAIjB,aAAa,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlCF,EA2CE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,4BAAjB;AAA8C,IAAA,KAAK,EAAC,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAElB,YADX;AAEE,IAAA,QAAQ,EAAE,kBAAAgB,CAAC;AAAA,aAAIf,eAAe,CAACe,CAAC,CAACC,MAAF,CAASE,OAAV,CAAnB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA3CF,EAkDE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,EAAE,EAAC,YAFL;AAGE,IAAA,OAAO,EAAEzC,UAHX;AAIE,IAAA,KAAK,EAAEwB,QAJT;AAKE,IAAA,QAAQ,EAAE,kBAAAc,CAAC;AAAA,aAAIb,WAAW,CAAC,CAACa,CAAC,CAACC,MAAF,CAASC,KAAX,CAAf;AAAA,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlDF,CAtCJ,EAmGE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,IAAI,EAAEtD,UAAU,CAACwD,KAHnB;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,OAAO,EAAEb,YALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnGF,CAFF,CADF;AAkHD","sourcesContent":["import { keyBy } from \"lodash\";\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport shortid from \"shortid\";\n\nimport HomeButton from \"~/components/homeButton\";\nimport Button, { ButtonSize } from \"~/components/ui/button\";\nimport { Checkbox, Field, Select, TextInput } from \"~/components/ui/forms\";\nimport Txt from \"~/components/ui/txt\";\nimport { newGame } from \"~/game/actions\";\nimport { GameMode, IGameHintsLevel } from \"~/game/state\";\nimport useNetwork from \"~/hooks/network\";\n\nconst PlayerCounts = [2, 3, 4, 5];\n\nconst HintsLevels = {\n  [IGameHintsLevel.DIRECT]: \"Show direct hints\",\n  [IGameHintsLevel.NONE]: \"Do not show hints\"\n};\n\nconst BotsSpeeds = {\n  0: \"Faster\",\n  1000: \"Fast\",\n  3000: \"Slow\"\n};\n\nexport default function NewGame() {\n  const router = useRouter();\n  const network = useNetwork();\n  const { offline } = router.query;\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const [seed, setSeed] = useState<string>();\n  const [playersCount, setPlayersCount] = useState(3);\n  const [multicolor, setMulticolor] = useState(false);\n  const [allowRollback, setAllowRollback] = useState(true);\n  const [preventLoss, setPreventLoss] = useState(false);\n  const [private_, setPrivate] = useState(false);\n  const [hintsLevel, setHintsLevel] = useState(IGameHintsLevel.DIRECT);\n  const [turnsHistory, setTurnsHistory] = useState(true);\n  const [botsWait, setBotsWait] = useState(1000);\n\n  /**\n   * Initialise seed on first render\n   */\n  useEffect(() => {\n    setSeed(`${Math.round(Math.random() * 10000)}`);\n  }, []);\n\n  async function onCreateGame() {\n    const gameId = shortid();\n\n    network.updateGame(\n      newGame({\n        id: gameId,\n        multicolor,\n        playersCount,\n        seed,\n        allowRollback,\n        preventLoss,\n        private: private_,\n        hintsLevel,\n        turnsHistory,\n        botsWait,\n        gameMode: offline ? GameMode.PASS_AND_PLAY : GameMode.NETWORK\n      })\n    );\n\n    router.push(`/play?gameId=${gameId}`);\n  }\n\n  return (\n    <div className=\"w-100 h-100 overflow-y-scroll pv4 flex items-center pv6-l relative bg-main-dark ph2 ph3-l shadow-5 br3\">\n      <HomeButton className=\"absolute top-1 right-1\" />\n      <div\n        className=\"flex flex-column w-50-m w-50-l w-80\"\n        style={{ margin: \"auto\" }}\n      >\n        <div className=\"f4 pb4 lavender\">\n          {offline\n            ? `In this pass-and-play mode, you can play offline with multiple\n              players by passing the device to each player on their turn`\n            : `You will be able to play online by sharing the game link to your\n            friends.`}\n        </div>\n        <Field className=\"pb2 mb2 bb b--yellow-light\" label=\"Players\">\n          <Select\n            className=\"w3 indent\"\n            id=\"players-count\"\n            options={keyBy(PlayerCounts)}\n            value={playersCount}\n            onChange={e => setPlayersCount(+e.target.value)}\n          />\n        </Field>\n\n        <Field label=\"Multicolor\">\n          <Checkbox\n            checked={multicolor}\n            id=\"multicolor\"\n            onChange={e => setMulticolor(e.target.checked)}\n          />\n        </Field>\n\n        <a\n          className=\"mv4 self-end underline pointer silver\"\n          id=\"advanced-options\"\n          onClick={() => setShowAdvanced(!showAdvanced)}\n        >\n          <Txt value=\"Advanced options\" />\n        </a>\n\n        {showAdvanced && (\n          <>\n            <Field className=\"pb2 mb2 bb b--yellow-light\" label=\"Private\">\n              <Checkbox\n                checked={private_}\n                onChange={e => setPrivate(e.target.checked)}\n              />\n            </Field>\n\n            <Field className=\"pb2 mb2 bb b--yellow-light\" label=\"Seed\">\n              <TextInput\n                className=\"w3 tr\"\n                id=\"seed\"\n                value={seed}\n                onChange={e => setSeed(e.target.value)}\n              />\n            </Field>\n\n            <Field\n              className=\"pb2 mb2 bb b--yellow-light\"\n              label=\"Allow rollback\"\n            >\n              <Checkbox\n                checked={allowRollback}\n                onChange={e => setAllowRollback(e.target.checked)}\n              />\n            </Field>\n\n            <Field className=\"pb2 mb2 bb b--yellow-light\" label=\"Prevent loss\">\n              <Checkbox\n                checked={preventLoss}\n                onChange={e => setPreventLoss(e.target.checked)}\n              />\n            </Field>\n\n            <Field className=\"pb2 mb2 bb b--yellow-light\" label=\"Hints\">\n              <Select\n                className=\"pl3\"\n                options={HintsLevels}\n                value={hintsLevel}\n                onChange={e => setHintsLevel(e.target.value as IGameHintsLevel)}\n              />\n            </Field>\n\n            <Field className=\"pb2 mb2 bb b--yellow-light\" label=\"Turns history\">\n              <Checkbox\n                checked={turnsHistory}\n                onChange={e => setTurnsHistory(e.target.checked)}\n              />\n            </Field>\n\n            <Field label=\"Bots speed\">\n              <Select\n                className=\"pl3\"\n                id=\"bots-speed\"\n                options={BotsSpeeds}\n                value={botsWait}\n                onChange={e => setBotsWait(+e.target.value)}\n              />\n            </Field>\n          </>\n        )}\n        <div className=\"flex flex-1 justify-end w-75\">\n          <Button\n            className=\"flex-1 justify-end mt5\"\n            id=\"new-game\"\n            size={ButtonSize.LARGE}\n            text=\"New game\"\n            onClick={onCreateGame}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}