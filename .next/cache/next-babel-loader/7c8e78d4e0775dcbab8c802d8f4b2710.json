{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sarahmamy/Workspace/hanabi/src/pages/_app.tsx\";\nvar __jsx = React.createElement;\nimport \"../styles/style.css\";\nimport * as Sentry from \"@sentry/browser\";\nimport NextApp from \"next/app\";\nimport Head from \"next/head\";\nimport React, { useState } from \"react\";\nimport Txt, { TxtSize } from \"../components/ui/txt\";\nimport useConnectivity from \"../hooks/connectivity\";\nimport FirebaseNetwork, { setupFirebase } from \"../hooks/firebase\";\nimport { NetworkContext } from \"../hooks/network\";\nSentry.init({\n  dsn: process.env.SENTRY_DSN,\n  environment: \"development\"\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_NextApp) {\n  _inherits(App, _NextApp);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      Sentry.withScope(function (scope) {\n        Object.keys(errorInfo).forEach(function (key) {\n          scope.setExtra(key, errorInfo[key]);\n        });\n        Sentry.captureException(error);\n      });\n\n      _get(_getPrototypeOf(App.prototype), \"componentDidCatch\", this).call(this, error, errorInfo);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Hanabi, {\n        Component: this.props.Component,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(NextApp);\n\nexport { App as default };\n\nfunction Hanabi(props) {\n  var Component = props.Component;\n\n  var _useState = useState(true),\n      showOffline = _useState[0],\n      setShowOffline = _useState[1];\n\n  var online = useConnectivity();\n  var network = new FirebaseNetwork(setupFirebase());\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"link\", {\n    href: \"/static/favicon.ico\",\n    rel: \"shortcut icon\",\n    type: \"image/x-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/hanabi-192.png\",\n    rel: \"apple-touch-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/manifest.json\",\n    rel: \"manifest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/hanabi-192.png\",\n    rel: \"apple-touch-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Hanabi\"), __jsx(\"meta\", {\n    content: \"#00153f\",\n    name: \"theme-color\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    content: \"Play the hanabi card game online.\",\n    name: \"Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), __jsx(NetworkContext.Provider, {\n    value: network,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"aspect-ratio--object\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, !online && showOffline && __jsx(\"div\", {\n    className: \"relative flex items-center justify-center bg-red shadow-4 b--red ba pa2 z-99\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Txt, {\n    uppercase: true,\n    size: TxtSize.MEDIUM,\n    value: \"You are offline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(\"a\", {\n    className: \"absolute right-1\",\n    onClick: function onClick() {\n      return setShowOffline(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Txt, {\n    value: \"\\xD7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))), __jsx(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/pages/_app.tsx"],"names":["Sentry","NextApp","Head","React","useState","Txt","TxtSize","useConnectivity","FirebaseNetwork","setupFirebase","NetworkContext","init","dsn","process","env","SENTRY_DSN","environment","App","error","errorInfo","withScope","scope","Object","keys","forEach","key","setExtra","captureException","props","Component","Hanabi","showOffline","setShowOffline","online","network","MEDIUM"],"mappings":"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","sourcesContent":["import \"../styles/style.css\";\n\nimport * as Sentry from \"@sentry/browser\";\nimport NextApp from \"next/app\";\nimport Head from \"next/head\";\nimport React, { ErrorInfo, useState } from \"react\";\n\nimport Txt, { TxtSize } from \"~/components/ui/txt\";\nimport useConnectivity from \"~/hooks/connectivity\";\nimport FirebaseNetwork, { setupFirebase } from \"~/hooks/firebase\";\nimport { NetworkContext } from \"~/hooks/network\";\n\nSentry.init({\n  dsn: process.env.SENTRY_DSN,\n  environment: process.env.NODE_ENV\n});\n\nexport default class App extends NextApp {\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    Sentry.withScope(scope => {\n      Object.keys(errorInfo).forEach(key => {\n        scope.setExtra(key, errorInfo[key]);\n      });\n\n      Sentry.captureException(error);\n    });\n\n    super.componentDidCatch(error, errorInfo);\n  }\n\n  render() {\n    return <Hanabi Component={this.props.Component} />;\n  }\n}\n\nfunction Hanabi(props: any) {\n  const { Component } = props;\n\n  const [showOffline, setShowOffline] = useState(true);\n  const online = useConnectivity();\n  const network = new FirebaseNetwork(setupFirebase());\n\n  return (\n    <>\n      <Head>\n        <link\n          href=\"/static/favicon.ico\"\n          rel=\"shortcut icon\"\n          type=\"image/x-icon\"\n        />\n        <link href=\"/static/hanabi-192.png\" rel=\"apple-touch-icon\" />\n\n        <link href=\"/static/manifest.json\" rel=\"manifest\" />\n        <link href=\"/static/hanabi-192.png\" rel=\"apple-touch-icon\" />\n\n        <title>Hanabi</title>\n        <meta content=\"#00153f\" name=\"theme-color\" />\n        <meta content=\"Play the hanabi card game online.\" name=\"Description\" />\n      </Head>\n      <NetworkContext.Provider value={network}>\n        <div className=\"aspect-ratio--object\">\n          {/* Offline indicator */}\n          {!online && showOffline && (\n            <div className=\"relative flex items-center justify-center bg-red shadow-4 b--red ba pa2 z-99\">\n              <Txt uppercase size={TxtSize.MEDIUM} value=\"You are offline\" />\n              <a\n                className=\"absolute right-1\"\n                onClick={() => setShowOffline(false)}\n              >\n                <Txt value=\"×\" />\n              </a>\n            </div>\n          )}\n\n          <Component />\n        </div>\n      </NetworkContext.Provider>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}