{"ast":null,"code":"var _jsxFileName = \"/Users/sarahmamy/Workspace/hanabi/src/components/playerName.tsx\";\nvar __jsx = React.createElement;\nimport classnames from \"classnames\";\nimport React from \"react\";\nimport Txt, { TxtSize } from \"./ui/txt\";\nimport { useSelfPlayer } from \"../hooks/game\";\nexport let PlayerNameSize;\n\n(function (PlayerNameSize) {\n  PlayerNameSize[\"SMALL\"] = \"small\";\n  PlayerNameSize[\"MEDIUM\"] = \"medium\";\n})(PlayerNameSize || (PlayerNameSize = {}));\n\nconst PlayerNameTextSizes = {\n  [PlayerNameSize.SMALL]: TxtSize.SMALL,\n  [PlayerNameSize.MEDIUM]: TxtSize.MEDIUM\n};\nexport default function PlayerName(props) {\n  const {\n    player,\n    size = PlayerNameSize.SMALL,\n    explicit = false,\n    className\n  } = props;\n  const selfPlayer = useSelfPlayer();\n  const you = !explicit && player.id === selfPlayer.id;\n  return __jsx(\"div\", {\n    className: classnames(\"relative inline-flex items-center\", className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Txt, {\n    className: \"truncate\",\n    size: PlayerNameTextSizes[size],\n    value: you ? \"You\" : player.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/components/playerName.tsx"],"names":["classnames","React","Txt","TxtSize","useSelfPlayer","PlayerNameSize","PlayerNameTextSizes","SMALL","MEDIUM","PlayerName","props","player","size","explicit","className","selfPlayer","you","id","name"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,IAAcC,OAAd,QAA6B,UAA7B;AAEA,SAASC,aAAT,QAA8B,eAA9B;AAEA,WAAYC,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AAKZ,MAAMC,mBAAmB,GAAG;AAC1B,GAACD,cAAc,CAACE,KAAhB,GAAwBJ,OAAO,CAACI,KADN;AAE1B,GAACF,cAAc,CAACG,MAAhB,GAAyBL,OAAO,CAACK;AAFP,CAA5B;AAaA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAAkC;AAC/C,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,IAAI,GAAGP,cAAc,CAACE,KAFlB;AAGJM,IAAAA,QAAQ,GAAG,KAHP;AAIJC,IAAAA;AAJI,MAKFJ,KALJ;AAOA,QAAMK,UAAU,GAAGX,aAAa,EAAhC;AACA,QAAMY,GAAG,GAAG,CAACH,QAAD,IAAaF,MAAM,CAACM,EAAP,KAAcF,UAAU,CAACE,EAAlD;AAEA,SACE;AAAK,IAAA,SAAS,EAAEjB,UAAU,CAAC,mCAAD,EAAsCc,SAAtC,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,IAAI,EAAER,mBAAmB,CAACM,IAAD,CAF3B;AAGE,IAAA,KAAK,EAAEI,GAAG,GAAG,KAAH,GAAWL,MAAM,CAACO,IAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD","sourcesContent":["import classnames from \"classnames\";\nimport React from \"react\";\n\nimport Txt, { TxtSize } from \"~/components/ui/txt\";\nimport { IPlayer } from \"~/game/state\";\nimport { useSelfPlayer } from \"~/hooks/game\";\n\nexport enum PlayerNameSize {\n  SMALL = \"small\",\n  MEDIUM = \"medium\"\n}\n\nconst PlayerNameTextSizes = {\n  [PlayerNameSize.SMALL]: TxtSize.SMALL,\n  [PlayerNameSize.MEDIUM]: TxtSize.MEDIUM\n};\n\ninterface Props {\n  player: IPlayer;\n  size?: PlayerNameSize;\n  explicit?: boolean;\n  className?: string;\n  reaction?: string;\n}\n\nexport default function PlayerName(props: Props) {\n  const {\n    player,\n    size = PlayerNameSize.SMALL,\n    explicit = false,\n    className\n  } = props;\n\n  const selfPlayer = useSelfPlayer();\n  const you = !explicit && player.id === selfPlayer.id;\n\n  return (\n    <div className={classnames(\"relative inline-flex items-center\", className)}>\n      <Txt\n        className=\"truncate\"\n        size={PlayerNameTextSizes[size]}\n        value={you ? \"You\" : player.name}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}