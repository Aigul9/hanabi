{"ast":null,"code":"var _jsxFileName = \"/Users/sarahmamy/Workspace/hanabi/src/components/vignettes.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Vignette from \"./vignette\";\nimport { getColors, numbers } from \"../game/actions\";\nimport { useGame } from \"../hooks/game\";\nexport default function Vignettes(props) {\n  const {\n    onSelect,\n    pendingHint\n  } = props;\n  const game = useGame();\n  const colors = getColors(game);\n  return __jsx(\"div\", {\n    className: \"flex flex-column items-center ml6-l\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex flex-row mb1 mb3-l\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, colors.map((color, i) => __jsx(Vignette, {\n    key: i,\n    selected: pendingHint.type === \"color\" && pendingHint.value === color,\n    type: \"color\",\n    value: color,\n    onClick: onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"flex flex-row justify-around\",\n    style: {\n      width: `${numbers.length / colors.length * 100}%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, numbers.map(number => __jsx(Vignette, {\n    key: number,\n    selected: pendingHint.type === \"number\" && pendingHint.value === number,\n    type: \"number\",\n    value: number,\n    onClick: onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/components/vignettes.tsx"],"names":["React","Vignette","getColors","numbers","useGame","Vignettes","props","onSelect","pendingHint","game","colors","map","color","i","type","value","width","length","number"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,iBAAnC;AAEA,SAASC,OAAT,QAAwB,eAAxB;AAOA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAiC;AAC9C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BF,KAAlC;AAEA,QAAMG,IAAI,GAAGL,OAAO,EAApB;AACA,QAAMM,MAAM,GAAGR,SAAS,CAACO,IAAD,CAAxB;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,KACV,MAAC,QAAD;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,QAAQ,EACNL,WAAW,CAACM,IAAZ,KAAqB,OAArB,IAAgCN,WAAW,CAACO,KAAZ,KAAsBH,KAH1D;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,KAAK,EAAEA,KANT;AAOE,IAAA,OAAO,EAAEL,QAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,EAcE;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAG,GAAGb,OAAO,CAACc,MAAR,GAAiBP,MAAM,CAACO,MAAzB,GAAmC,GAAI;AAAnD,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGd,OAAO,CAACQ,GAAR,CAAYO,MAAM,IACjB,MAAC,QAAD;AACE,IAAA,GAAG,EAAEA,MADP;AAEE,IAAA,QAAQ,EACNV,WAAW,CAACM,IAAZ,KAAqB,QAArB,IAAiCN,WAAW,CAACO,KAAZ,KAAsBG,MAH3D;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,KAAK,EAAEA,MANT;AAOE,IAAA,OAAO,EAAEX,QAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJH,CAdF,CADF;AAiCD","sourcesContent":["import React from \"react\";\n\nimport Vignette from \"~/components/vignette\";\nimport { getColors, numbers } from \"~/game/actions\";\nimport { IHintAction } from \"~/game/state\";\nimport { useGame } from \"~/hooks/game\";\n\ninterface Props {\n  onSelect: (action: IHintAction) => void;\n  pendingHint: IHintAction;\n}\n\nexport default function Vignettes(props: Props) {\n  const { onSelect, pendingHint } = props;\n\n  const game = useGame();\n  const colors = getColors(game);\n\n  return (\n    <div className=\"flex flex-column items-center ml6-l\">\n      <div className=\"flex flex-row mb1 mb3-l\">\n        {colors.map((color, i) => (\n          <Vignette\n            key={i}\n            selected={\n              pendingHint.type === \"color\" && pendingHint.value === color\n            }\n            type=\"color\"\n            value={color}\n            onClick={onSelect}\n          />\n        ))}\n      </div>\n      <div\n        className=\"flex flex-row justify-around\"\n        style={{ width: `${(numbers.length / colors.length) * 100}%` }}\n      >\n        {numbers.map(number => (\n          <Vignette\n            key={number}\n            selected={\n              pendingHint.type === \"number\" && pendingHint.value === number\n            }\n            type=\"number\"\n            value={number}\n            onClick={onSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}