{"ast":null,"code":"var _jsxFileName = \"/Users/sarahmamy/Workspace/hanabi/src/components/vignettes.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Vignette from \"./vignette\";\nimport { getColors, numbers } from \"../game/actions\";\nimport { useGame } from \"../hooks/game\";\nexport default function Vignettes(props) {\n  var onSelect = props.onSelect,\n      pendingHint = props.pendingHint;\n  var game = useGame();\n  var colors = getColors(game);\n  return __jsx(\"div\", {\n    className: \"flex flex-column items-center ml6-l\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex flex-row mb1 mb3-l\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, colors.map(function (color, i) {\n    return __jsx(Vignette, {\n      key: i,\n      selected: pendingHint.type === \"color\" && pendingHint.value === color,\n      type: \"color\",\n      value: color,\n      onClick: onSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  })), __jsx(\"div\", {\n    className: \"flex flex-row justify-around\",\n    style: {\n      width: \"\".concat(numbers.length / colors.length * 100, \"%\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, numbers.map(function (number) {\n    return __jsx(Vignette, {\n      key: number,\n      selected: pendingHint.type === \"number\" && pendingHint.value === number,\n      type: \"number\",\n      value: number,\n      onClick: onSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/components/vignettes.tsx"],"names":["React","Vignette","getColors","numbers","useGame","Vignettes","props","onSelect","pendingHint","game","colors","map","color","i","type","value","width","length","number"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,iBAAnC;AAEA,SAASC,OAAT,QAAwB,eAAxB;AAOA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAiC;AAAA,MACtCC,QADsC,GACZD,KADY,CACtCC,QADsC;AAAA,MAC5BC,WAD4B,GACZF,KADY,CAC5BE,WAD4B;AAG9C,MAAMC,IAAI,GAAGL,OAAO,EAApB;AACA,MAAMM,MAAM,GAAGR,SAAS,CAACO,IAAD,CAAxB;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAQC,CAAR;AAAA,WACV,MAAC,QAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,QAAQ,EACNL,WAAW,CAACM,IAAZ,KAAqB,OAArB,IAAgCN,WAAW,CAACO,KAAZ,KAAsBH,KAH1D;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,KAAK,EAAEA,KANT;AAOE,MAAA,OAAO,EAAEL,QAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CADH,CADF,EAcE;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,YAAMb,OAAO,CAACc,MAAR,GAAiBP,MAAM,CAACO,MAAzB,GAAmC,GAAxC;AAAP,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGd,OAAO,CAACQ,GAAR,CAAY,UAAAO,MAAM;AAAA,WACjB,MAAC,QAAD;AACE,MAAA,GAAG,EAAEA,MADP;AAEE,MAAA,QAAQ,EACNV,WAAW,CAACM,IAAZ,KAAqB,QAArB,IAAiCN,WAAW,CAACO,KAAZ,KAAsBG,MAH3D;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,KAAK,EAAEA,MANT;AAOE,MAAA,OAAO,EAAEX,QAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB;AAAA,GAAlB,CAJH,CAdF,CADF;AAiCD","sourcesContent":["import React from \"react\";\n\nimport Vignette from \"~/components/vignette\";\nimport { getColors, numbers } from \"~/game/actions\";\nimport { IHintAction } from \"~/game/state\";\nimport { useGame } from \"~/hooks/game\";\n\ninterface Props {\n  onSelect: (action: IHintAction) => void;\n  pendingHint: IHintAction;\n}\n\nexport default function Vignettes(props: Props) {\n  const { onSelect, pendingHint } = props;\n\n  const game = useGame();\n  const colors = getColors(game);\n\n  return (\n    <div className=\"flex flex-column items-center ml6-l\">\n      <div className=\"flex flex-row mb1 mb3-l\">\n        {colors.map((color, i) => (\n          <Vignette\n            key={i}\n            selected={\n              pendingHint.type === \"color\" && pendingHint.value === color\n            }\n            type=\"color\"\n            value={color}\n            onClick={onSelect}\n          />\n        ))}\n      </div>\n      <div\n        className=\"flex flex-row justify-around\"\n        style={{ width: `${(numbers.length / colors.length) * 100}%` }}\n      >\n        {numbers.map(number => (\n          <Vignette\n            key={number}\n            selected={\n              pendingHint.type === \"number\" && pendingHint.value === number\n            }\n            type=\"number\"\n            value={number}\n            onClick={onSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}