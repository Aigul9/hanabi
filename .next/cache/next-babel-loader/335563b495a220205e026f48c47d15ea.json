{"ast":null,"code":"var _jsxFileName = \"/Users/sarahmamy/Workspace/hanabi/src/components/replayViewer.tsx\";\nvar __jsx = React.createElement;\nimport Slider from \"rc-slider\";\nimport React, { useEffect, useState } from \"react\";\nimport Button, { ButtonSize } from \"./ui/button\";\nimport Txt, { TxtSize } from \"./ui/txt\";\nimport { useGame } from \"../hooks/game\";\nvar SliderStyle = {\n  HANDLE: {\n    backgroundColor: \"var(--color-main)\",\n    borderColor: \"var(--color-yellow)\",\n    height: \"18px\",\n    width: \"18px\"\n  },\n  RAIL: {\n    height: \"8px\",\n    backgroundColor: \"var(--color-lavender)\"\n  },\n  TRACK: {\n    backgroundColor: \"var(--color-main)\",\n    height: \"8px\"\n  }\n};\nexport default function ReplayViewver(props) {\n  var onReplayCursorChange = props.onReplayCursorChange,\n      onStopReplay = props.onStopReplay;\n  var game = useGame();\n\n  var _useState = useState(game.replayCursor),\n      replayCursor = _useState[0],\n      setReplayCursor = _useState[1];\n\n  var maxTurns = game.originalGame.turnsHistory.length - 1;\n  useEffect(function () {\n    setReplayCursor(game.replayCursor);\n  }, [game.replayCursor]);\n  return __jsx(\"div\", {\n    className: \"bg-black-50 flex justify-between items-center pa2 bt bb b--yellow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex flex-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Txt, {\n    className: \"db\",\n    size: TxtSize.SMALL,\n    value: \"Replay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(Txt, {\n    className: \"mt1 light-silver nowrap\",\n    size: TxtSize.SMALL,\n    value: \"\".concat(replayCursor, \" / \").concat(maxTurns),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), __jsx(Button, {\n    \"void\": true,\n    className: \"ml3\",\n    disabled: game.replayCursor === 0,\n    size: ButtonSize.TINY,\n    text: \"<\",\n    onClick: function onClick() {\n      return onReplayCursorChange(game.replayCursor - 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(Slider, {\n    className: \"ml3 nt1\",\n    handleStyle: SliderStyle.HANDLE,\n    max: maxTurns,\n    min: 0,\n    railStyle: SliderStyle.RAIL,\n    trackStyle: SliderStyle.TRACK,\n    value: replayCursor,\n    onAfterChange: onReplayCursorChange,\n    onChange: setReplayCursor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(Button, {\n    \"void\": true,\n    className: \"ml3\",\n    disabled: game.replayCursor === maxTurns,\n    size: ButtonSize.TINY,\n    text: \">\",\n    onClick: function onClick() {\n      return onReplayCursorChange(game.replayCursor + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(Button, {\n    \"void\": true,\n    className: \"ml3\",\n    size: ButtonSize.TINY,\n    text: \"\\xD7\",\n    onClick: onStopReplay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/components/replayViewer.tsx"],"names":["Slider","React","useEffect","useState","Button","ButtonSize","Txt","TxtSize","useGame","SliderStyle","HANDLE","backgroundColor","borderColor","height","width","RAIL","TRACK","ReplayViewver","props","onReplayCursorChange","onStopReplay","game","replayCursor","setReplayCursor","maxTurns","originalGame","turnsHistory","length","SMALL","TINY"],"mappings":"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","sourcesContent":["import Slider from \"rc-slider\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Button, { ButtonSize } from \"~/components/ui/button\";\nimport Txt, { TxtSize } from \"~/components/ui/txt\";\nimport { useGame } from \"~/hooks/game\";\n\nconst SliderStyle = {\n  HANDLE: {\n    backgroundColor: \"var(--color-main)\",\n    borderColor: \"var(--color-yellow)\",\n    height: \"18px\",\n    width: \"18px\"\n  },\n  RAIL: {\n    height: \"8px\",\n    backgroundColor: \"var(--color-lavender)\"\n  },\n  TRACK: {\n    backgroundColor: \"var(--color-main)\",\n    height: \"8px\"\n  }\n};\n\ninterface Props {\n  onReplayCursorChange: (cursor: number) => void;\n  onStopReplay: () => void;\n}\n\nexport default function ReplayViewver(props: Props) {\n  const { onReplayCursorChange, onStopReplay } = props;\n\n  const game = useGame();\n  const [replayCursor, setReplayCursor] = useState(game.replayCursor);\n\n  const maxTurns = game.originalGame.turnsHistory.length - 1;\n\n  useEffect(() => {\n    setReplayCursor(game.replayCursor);\n  }, [game.replayCursor]);\n\n  return (\n    <div className=\"bg-black-50 flex justify-between items-center pa2 bt bb b--yellow\">\n      <div className=\"flex flex-column\">\n        <Txt className=\"db\" size={TxtSize.SMALL} value={`Replay`} />\n        <Txt\n          className=\"mt1 light-silver nowrap\"\n          size={TxtSize.SMALL}\n          value={`${replayCursor} / ${maxTurns}`}\n        />\n      </div>\n      <Button\n        void\n        className=\"ml3\"\n        disabled={game.replayCursor === 0}\n        size={ButtonSize.TINY}\n        text=\"<\"\n        onClick={() => onReplayCursorChange(game.replayCursor - 1)}\n      />\n      <Slider\n        className=\"ml3 nt1\"\n        handleStyle={SliderStyle.HANDLE}\n        max={maxTurns}\n        min={0}\n        railStyle={SliderStyle.RAIL}\n        trackStyle={SliderStyle.TRACK}\n        value={replayCursor}\n        onAfterChange={onReplayCursorChange}\n        onChange={setReplayCursor}\n      />\n      <Button\n        void\n        className=\"ml3\"\n        disabled={game.replayCursor === maxTurns}\n        size={ButtonSize.TINY}\n        text=\">\"\n        onClick={() => onReplayCursorChange(game.replayCursor + 1)}\n      />\n      <Button\n        void\n        className=\"ml3\"\n        size={ButtonSize.TINY}\n        text=\"&times;\"\n        onClick={onStopReplay}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}