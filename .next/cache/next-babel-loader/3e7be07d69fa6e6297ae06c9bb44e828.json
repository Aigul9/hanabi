{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _steps,\n    _jsxFileName = \"/Users/sarahmamy/Workspace/hanabi/src/components/tutorial.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Popover from \"react-popover\";\nimport posed from \"react-pose\";\nimport Button, { ButtonSize } from \"./ui/button\";\nimport Txt, { TxtSize } from \"./ui/txt\";\nexport var TutorialContext = React.createContext(null);\nvar LocalStorageKey = \"tutorialStep\";\nvar HighlightedArea = posed.div({\n  attention: {\n    opacity: 0.7,\n    transition: {\n      type: \"spring\",\n      stiffness: 10,\n      damping: 0\n    }\n  }\n});\nexport var ITutorialStep;\n\n(function (ITutorialStep) {\n  ITutorialStep[ITutorialStep[\"WELCOME\"] = 0] = \"WELCOME\";\n  ITutorialStep[ITutorialStep[\"PLAYED_CARDS\"] = 1] = \"PLAYED_CARDS\";\n  ITutorialStep[ITutorialStep[\"DISCARD_PILE\"] = 2] = \"DISCARD_PILE\";\n  ITutorialStep[ITutorialStep[\"SELF_PLAYER\"] = 3] = \"SELF_PLAYER\";\n  ITutorialStep[ITutorialStep[\"OTHER_PLAYERS\"] = 4] = \"OTHER_PLAYERS\";\n  ITutorialStep[ITutorialStep[\"HINT_TOKENS\"] = 5] = \"HINT_TOKENS\";\n  ITutorialStep[ITutorialStep[\"STRIKE_TOKENS\"] = 6] = \"STRIKE_TOKENS\";\n})(ITutorialStep || (ITutorialStep = {}));\n\nvar steps = (_steps = {}, _defineProperty(_steps, ITutorialStep.WELCOME, {\n  title: \"Welcome!\",\n  body: \"Let's learn how to play\"\n}), _defineProperty(_steps, ITutorialStep.PLAYED_CARDS, {\n  title: \"Played cards\",\n  body: \"This will nest the cards that have been played.\\nReach 5 on each color to win the game.\"\n}), _defineProperty(_steps, ITutorialStep.DISCARD_PILE, {\n  title: \"Discard\",\n  body: \"This pile contains all the cards you discarded.\\nWatch out and avoid discarding the cards you need to finish the game.\"\n}), _defineProperty(_steps, ITutorialStep.SELF_PLAYER, {\n  title: \"Your game\",\n  body: \"These are your cards.\\nYou can't see them, but other players can and will give you hints about them.\"\n}), _defineProperty(_steps, ITutorialStep.OTHER_PLAYERS, {\n  title: \"Teammates\",\n  body: \"These are your teammates.\\nLike you, they can't see their cards.\\nGive them hints to help them play or discard cards\"\n}), _defineProperty(_steps, ITutorialStep.HINT_TOKENS, {\n  title: \"Hint tokens\",\n  body: \"- Giving a hint costs 1 hint token.\\n- Discarding a card grants 1 hint token.\\n- Playing a 5 gives 1 hint token as a bonus\"\n}), _defineProperty(_steps, ITutorialStep.STRIKE_TOKENS, {\n  title: \"Strike tokens\",\n  body: \"Playing a wrong card will discard it and cost you 1 strike token.\\nReaching 3 strike tokens will instantly lose the game.\"\n}), _steps);\nexport function TutorialProvider(props) {\n  var children = props.children;\n\n  var _useState = useState(+localStorage.getItem(LocalStorageKey) || ITutorialStep.WELCOME),\n      currentStep = _useState[0],\n      setCurrentStep = _useState[1];\n\n  function setStep(step) {\n    setCurrentStep(step);\n    localStorage.setItem(LocalStorageKey, step.toString());\n  }\n\n  var count = Object.keys(steps).length;\n  return __jsx(TutorialContext.Provider, {\n    value: {\n      currentStep: currentStep,\n      totalSteps: count,\n      lastStep: currentStep === count - 1,\n      previousStep: function previousStep() {\n        return setStep(currentStep - 1);\n      },\n      nextStep: function nextStep() {\n        return setStep(currentStep + 1);\n      },\n      skip: function skip() {\n        return setStep(-1);\n      },\n      reset: function reset() {\n        return setStep(1);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, children);\n}\nexport default function Tutorial(props) {\n  var step = props.step,\n      placement = props.placement,\n      children = props.children;\n\n  var _useState2 = useState(null),\n      pose = _useState2[0],\n      setPose = _useState2[1];\n\n  var _useContext = useContext(TutorialContext),\n      currentStep = _useContext.currentStep,\n      previousStep = _useContext.previousStep,\n      nextStep = _useContext.nextStep,\n      lastStep = _useContext.lastStep,\n      skip = _useContext.skip,\n      totalSteps = _useContext.totalSteps;\n\n  useEffect(function () {\n    if (step !== currentStep) return;\n    var interval = setTimeout(function () {\n      return setPose(\"attention\");\n    }, 100);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [currentStep]);\n\n  if (step !== currentStep) {\n    return children ? __jsx(React.Fragment, null, children) : null;\n  }\n\n  var _steps$step = steps[step],\n      title = _steps$step.title,\n      body = _steps$step.body;\n  return __jsx(Popover, {\n    body: __jsx(\"div\", {\n      className: \"flex flex-column b--yellow ba bw1 bg-white pa2 pa3-l br2 main-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"flex items-center justify-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, __jsx(Txt, {\n      size: TxtSize.MEDIUM,\n      value: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), step > 0 && __jsx(Txt, {\n      className: \"gray mr2\",\n      value: \"\".concat(step, \" / \").concat(totalSteps - 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"flex items-center mt2 mt4-l\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, __jsx(Txt, {\n      multiline: true,\n      className: \"mr4\",\n      value: body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), step === ITutorialStep.WELCOME && __jsx(React.Fragment, null, __jsx(Button, {\n      className: \"mr1 mr2-l\",\n      id: \"skip-tutorial\",\n      size: ButtonSize.TINY,\n      text: \"Skip\",\n      onClick: skip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), __jsx(Button, {\n      size: ButtonSize.TINY,\n      text: \"Go !\",\n      onClick: nextStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), step !== ITutorialStep.WELCOME && __jsx(React.Fragment, null, step > 1 && __jsx(Button, {\n      className: \"mr1 mr2-l\",\n      size: ButtonSize.TINY,\n      text: \"<\",\n      onClick: previousStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), __jsx(Button, {\n      size: ButtonSize.TINY,\n      text: lastStep ? \"âœ“\" : \">\",\n      onClick: nextStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })))),\n    className: \"z-999\",\n    enterExitTransitionDurationMs: 0,\n    isOpen: true,\n    preferPlace: placement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(HighlightedArea, {\n    pose: pose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, children));\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/components/tutorial.tsx"],"names":["React","useContext","useEffect","useState","Popover","posed","Button","ButtonSize","Txt","TxtSize","TutorialContext","createContext","LocalStorageKey","HighlightedArea","div","attention","opacity","transition","type","stiffness","damping","ITutorialStep","steps","WELCOME","title","body","PLAYED_CARDS","DISCARD_PILE","SELF_PLAYER","OTHER_PLAYERS","HINT_TOKENS","STRIKE_TOKENS","TutorialProvider","props","children","localStorage","getItem","currentStep","setCurrentStep","setStep","step","setItem","toString","count","Object","keys","length","totalSteps","lastStep","previousStep","nextStep","skip","reset","Tutorial","placement","pose","setPose","interval","setTimeout","clearInterval","MEDIUM","TINY"],"mappings":"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","sourcesContent":["import React, { ReactNode, useContext, useEffect, useState } from \"react\";\nimport Popover, { PopoverPlace } from \"react-popover\";\nimport posed from \"react-pose\";\n\nimport Button, { ButtonSize } from \"~/components/ui/button\";\nimport Txt, { TxtSize } from \"~/components/ui/txt\";\n\nexport const TutorialContext = React.createContext(null);\n\nconst LocalStorageKey = \"tutorialStep\";\n\nconst HighlightedArea = posed.div({\n  attention: {\n    opacity: 0.7,\n    transition: {\n      type: \"spring\",\n      stiffness: 10,\n      damping: 0\n    }\n  }\n});\n\nexport enum ITutorialStep {\n  WELCOME = 0,\n  PLAYED_CARDS = 1,\n  DISCARD_PILE = 2,\n  SELF_PLAYER = 3,\n  OTHER_PLAYERS = 4,\n  HINT_TOKENS = 5,\n  STRIKE_TOKENS = 6\n}\n\nconst steps = {\n  [ITutorialStep.WELCOME]: {\n    title: \"Welcome!\",\n    body: \"Let's learn how to play\"\n  },\n  [ITutorialStep.PLAYED_CARDS]: {\n    title: \"Played cards\",\n    body:\n      \"This will nest the cards that have been played.\\nReach 5 on each color to win the game.\"\n  },\n  [ITutorialStep.DISCARD_PILE]: {\n    title: \"Discard\",\n    body:\n      \"This pile contains all the cards you discarded.\\nWatch out and avoid discarding the cards you need to finish the game.\"\n  },\n  [ITutorialStep.SELF_PLAYER]: {\n    title: \"Your game\",\n    body:\n      \"These are your cards.\\nYou can't see them, but other players can and will give you hints about them.\"\n  },\n  [ITutorialStep.OTHER_PLAYERS]: {\n    title: \"Teammates\",\n    body:\n      \"These are your teammates.\\nLike you, they can't see their cards.\\nGive them hints to help them play or discard cards\"\n  },\n  [ITutorialStep.HINT_TOKENS]: {\n    title: \"Hint tokens\",\n    body:\n      \"- Giving a hint costs 1 hint token.\\n- Discarding a card grants 1 hint token.\\n- Playing a 5 gives 1 hint token as a bonus\"\n  },\n  [ITutorialStep.STRIKE_TOKENS]: {\n    title: \"Strike tokens\",\n    body:\n      \"Playing a wrong card will discard it and cost you 1 strike token.\\nReaching 3 strike tokens will instantly lose the game.\"\n  }\n};\n\ninterface TutorialProviderProps {\n  children: ReactNode;\n}\n\nexport function TutorialProvider(props: TutorialProviderProps) {\n  const { children } = props;\n\n  const [currentStep, setCurrentStep] = useState(\n    +localStorage.getItem(LocalStorageKey) || ITutorialStep.WELCOME\n  );\n\n  function setStep(step: number) {\n    setCurrentStep(step);\n    localStorage.setItem(LocalStorageKey, step.toString());\n  }\n\n  const count = Object.keys(steps).length;\n\n  return (\n    <TutorialContext.Provider\n      value={{\n        currentStep,\n        totalSteps: count,\n        lastStep: currentStep === count - 1,\n        previousStep: () => setStep(currentStep - 1),\n        nextStep: () => setStep(currentStep + 1),\n        skip: () => setStep(-1),\n        reset: () => setStep(1)\n      }}\n    >\n      {children}\n    </TutorialContext.Provider>\n  );\n}\n\ninterface Props {\n  step: ITutorialStep;\n  placement?: PopoverPlace;\n  children?: ReactNode;\n}\n\nexport default function Tutorial(props: Props) {\n  const { step, placement, children } = props;\n\n  const [pose, setPose] = useState(null);\n  const {\n    currentStep,\n    previousStep,\n    nextStep,\n    lastStep,\n    skip,\n    totalSteps\n  } = useContext(TutorialContext);\n\n  useEffect(() => {\n    if (step !== currentStep) return;\n\n    const interval = setTimeout(() => setPose(\"attention\"), 100);\n\n    return () => clearInterval(interval);\n  }, [currentStep]);\n\n  if (step !== currentStep) {\n    return children ? <>{children}</> : null;\n  }\n\n  const { title, body } = steps[step];\n\n  return (\n    <Popover\n      body={\n        <div className=\"flex flex-column b--yellow ba bw1 bg-white pa2 pa3-l br2 main-dark\">\n          <span className=\"flex items-center justify-between\">\n            <Txt size={TxtSize.MEDIUM} value={title} />\n            {step > 0 && (\n              <Txt className=\"gray mr2\" value={`${step} / ${totalSteps - 1}`} />\n            )}\n          </span>\n          <div className=\"flex items-center mt2 mt4-l\">\n            <Txt multiline className=\"mr4\" value={body} />\n\n            {step === ITutorialStep.WELCOME && (\n              <>\n                <Button\n                  className=\"mr1 mr2-l\"\n                  id=\"skip-tutorial\"\n                  size={ButtonSize.TINY}\n                  text=\"Skip\"\n                  onClick={skip}\n                />\n                <Button size={ButtonSize.TINY} text=\"Go !\" onClick={nextStep} />\n              </>\n            )}\n\n            {step !== ITutorialStep.WELCOME && (\n              <>\n                {step > 1 && (\n                  <Button\n                    className=\"mr1 mr2-l\"\n                    size={ButtonSize.TINY}\n                    text=\"<\"\n                    onClick={previousStep}\n                  />\n                )}\n                <Button\n                  size={ButtonSize.TINY}\n                  text={lastStep ? \"âœ“\" : \">\"}\n                  onClick={nextStep}\n                />\n              </>\n            )}\n          </div>\n        </div>\n      }\n      className=\"z-999\"\n      enterExitTransitionDurationMs={0}\n      isOpen={true}\n      preferPlace={placement}\n    >\n      <HighlightedArea pose={pose}>{children}</HighlightedArea>\n    </Popover>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}