{"ast":null,"code":"var _jsxFileName = \"/Users/sarahmamy/Workspace/hanabi/src/components/card.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport classnames from \"classnames\";\nimport React from \"react\";\nimport Hint from \"./hint\";\nimport Txt, { TxtSize } from \"./ui/txt\";\nimport { getColors, numbers } from \"../game/actions\";\nimport { IGameHintsLevel } from \"../game/state\";\nimport { useGame } from \"../hooks/game\";\nexport let CardSize;\n\n(function (CardSize) {\n  CardSize[\"SMALL\"] = \"small\";\n  CardSize[\"MEDIUM\"] = \"medium\";\n  CardSize[\"LARGE\"] = \"large\";\n  CardSize[\"FLEX\"] = \"flex\";\n})(CardSize || (CardSize = {}));\n\nconst CardClasses = {\n  [CardSize.SMALL]: \"h1.25 w1.25 h2-l w2-l\",\n  [CardSize.MEDIUM]: \"h2 w2 h3-l w3-l\",\n  [CardSize.LARGE]: \"h3 w3 h3.5-l w3.5-l\",\n  [CardSize.FLEX]: \"flex-square\"\n};\nconst CardTextSizes = {\n  [CardSize.SMALL]: TxtSize.SMALL,\n  [CardSize.MEDIUM]: TxtSize.MEDIUM,\n  [CardSize.LARGE]: TxtSize.MEDIUM\n};\nexport const PositionMap = {\n  0: \"A\",\n  1: \"B\",\n  2: \"C\",\n  3: \"D\",\n  4: \"E\"\n};\nexport let ICardContext;\n\n(function (ICardContext) {\n  ICardContext[ICardContext[\"SELF_PLAYER\"] = 0] = \"SELF_PLAYER\";\n  ICardContext[ICardContext[\"OTHER_PLAYER\"] = 1] = \"OTHER_PLAYER\";\n  ICardContext[ICardContext[\"TARGETED_PLAYER\"] = 2] = \"TARGETED_PLAYER\";\n  ICardContext[ICardContext[\"PLAYED\"] = 3] = \"PLAYED\";\n  ICardContext[ICardContext[\"DISCARDED\"] = 4] = \"DISCARDED\";\n  ICardContext[ICardContext[\"DRAWN\"] = 5] = \"DRAWN\";\n  ICardContext[ICardContext[\"OTHER\"] = 6] = \"OTHER\";\n})(ICardContext || (ICardContext = {}));\n\nexport function CardWrapper(props) {\n  const {\n    color,\n    size = CardSize.MEDIUM,\n    playable = false,\n    context,\n    className = \"\",\n    style = {},\n    onClick,\n    children\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"color\", \"size\", \"playable\", \"context\", \"className\", \"style\", \"onClick\", \"children\"]);\n\n  const sizeClass = CardClasses[size];\n  return __jsx(\"div\", _extends({\n    className: classnames(\"relative flex items-center justify-center br1 ba\", sizeClass, className, `bg-${color}`, {\n      \"shadow-2\": size.includes(\"large\")\n    }, {\n      \"shadow-1\": size.includes(\"medium\")\n    }, {\n      pointer: playable\n    }, {\n      grow: context === ICardContext.TARGETED_PLAYER\n    }),\n    style: style,\n    onClick: onClick\n  }, attributes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), children);\n}\nexport default function Card(props) {\n  const {\n    card,\n    context,\n    onClick = () => {},\n    hidden = false,\n    playable = true,\n    size = CardSize.MEDIUM,\n    className = \"\",\n    style = {},\n    position = null,\n    selected = false\n  } = props;\n  const game = useGame();\n  const colors = getColors(game);\n  const color = hidden ? \"gray-light\" : card.color;\n  const number = hidden ? null : card.number;\n  const displayHints = game.options.hintsLevel !== IGameHintsLevel.NONE && [ICardContext.OTHER_PLAYER, ICardContext.TARGETED_PLAYER, ICardContext.SELF_PLAYER].includes(context);\n\n  if (selected) {\n    style.transform = \"scale(1.20)\";\n  }\n\n  return __jsx(CardWrapper, {\n    className: classnames({\n      \"bw1 z-5\": selected\n    }, className),\n    color: color,\n    context: context,\n    \"data-card\": PositionMap[position],\n    playable: playable,\n    size: size,\n    style: style,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(Txt, {\n    className: classnames(\"white outline-main-dark\", {\n      mb3: displayHints && size === CardSize.LARGE\n    }),\n    size: CardTextSizes[size],\n    value: number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), position !== null && size === CardSize.LARGE && __jsx(Txt, {\n    className: \"absolute left-0 top-0 ma1 black-20\",\n    value: PositionMap[position],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), displayHints && hidden && __jsx(\"div\", {\n    className: classnames(\"top-0 br-100 w-50 h-50 flex justify-center items-center outline-main-dark\", {\n      [`bg-${card.color}`]: card.hint.color[card.color] === 2\n    }, {\n      [`ba b--${card.color}`]: card.hint.color[card.color] === 2\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, card.hint.number[card.number] === 2 && __jsx(Txt, {\n    value: card.number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  })), displayHints && size === CardSize.LARGE && __jsx(\"div\", {\n    className: \"flex absolute w-100 right-0 bottom-0 pv1 flex-l items-center flex-column bg-black-50\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex justify-around w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, colors.map(color => __jsx(Hint, {\n    key: color,\n    hint: card.hint.color[color],\n    type: \"color\",\n    value: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"flex justify-around white mt1 mt2-l\",\n    style: {\n      width: `${numbers.length / colors.length * 100}%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, numbers.map(number => __jsx(Hint, {\n    key: number,\n    hint: card.hint.number[number],\n    type: \"number\",\n    value: number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/components/card.tsx"],"names":["classnames","React","Hint","Txt","TxtSize","getColors","numbers","IGameHintsLevel","useGame","CardSize","CardClasses","SMALL","MEDIUM","LARGE","FLEX","CardTextSizes","PositionMap","ICardContext","CardWrapper","props","color","size","playable","context","className","style","onClick","children","attributes","sizeClass","includes","pointer","grow","TARGETED_PLAYER","Card","card","hidden","position","selected","game","colors","number","displayHints","options","hintsLevel","NONE","OTHER_PLAYER","SELF_PLAYER","transform","mb3","hint","map","width","length"],"mappings":"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","sourcesContent":["import classnames from \"classnames\";\nimport React, {\n  CSSProperties,\n  HTMLAttributes,\n  MouseEventHandler,\n  ReactNode\n} from \"react\";\n\nimport Hint from \"~/components/hint\";\nimport Txt, { TxtSize } from \"~/components/ui/txt\";\nimport { getColors, numbers } from \"~/game/actions\";\nimport { ICard, IGameHintsLevel } from \"~/game/state\";\nimport { useGame } from \"~/hooks/game\";\n\nexport enum CardSize {\n  SMALL = \"small\",\n  MEDIUM = \"medium\",\n  LARGE = \"large\",\n  FLEX = \"flex\"\n}\n\nconst CardClasses = {\n  [CardSize.SMALL]: \"h1.25 w1.25 h2-l w2-l\",\n  [CardSize.MEDIUM]: \"h2 w2 h3-l w3-l\",\n  [CardSize.LARGE]: \"h3 w3 h3.5-l w3.5-l\",\n  [CardSize.FLEX]: \"flex-square\"\n};\n\nconst CardTextSizes = {\n  [CardSize.SMALL]: TxtSize.SMALL,\n  [CardSize.MEDIUM]: TxtSize.MEDIUM,\n  [CardSize.LARGE]: TxtSize.MEDIUM\n};\n\nexport const PositionMap = {\n  0: \"A\",\n  1: \"B\",\n  2: \"C\",\n  3: \"D\",\n  4: \"E\"\n};\n\nexport enum ICardContext {\n  SELF_PLAYER,\n  OTHER_PLAYER,\n  TARGETED_PLAYER,\n  PLAYED,\n  DISCARDED,\n  DRAWN,\n  OTHER\n}\n\ninterface CardWrapperProps extends HTMLAttributes<HTMLElement> {\n  color: string;\n  size?: CardSize;\n  playable?: boolean;\n  context?: ICardContext;\n  className?: string;\n  style?: CSSProperties;\n  onClick?: MouseEventHandler;\n  children?: ReactNode;\n}\n\nexport function CardWrapper(props: CardWrapperProps) {\n  const {\n    color,\n    size = CardSize.MEDIUM,\n    playable = false,\n    context,\n    className = \"\",\n    style = {},\n    onClick,\n    children,\n    ...attributes\n  } = props;\n\n  const sizeClass = CardClasses[size];\n\n  return (\n    <div\n      className={classnames(\n        \"relative flex items-center justify-center br1 ba\",\n        sizeClass,\n        className,\n        `bg-${color}`,\n        { \"shadow-2\": size.includes(\"large\") },\n        { \"shadow-1\": size.includes(\"medium\") },\n        { pointer: playable },\n        { grow: context === ICardContext.TARGETED_PLAYER }\n      )}\n      style={style}\n      onClick={onClick}\n      {...attributes}\n    >\n      {children}\n    </div>\n  );\n}\n\ninterface Props {\n  card: ICard;\n  context: ICardContext;\n  hidden?: boolean;\n  position?: number;\n  selected?: boolean;\n  playable?: boolean;\n  size?: CardSize;\n  className?: string;\n  style?: CSSProperties;\n  onClick?: MouseEventHandler;\n}\n\nexport default function Card(props: Props) {\n  const {\n    card,\n    context,\n    onClick = () => {},\n    hidden = false,\n    playable = true,\n    size = CardSize.MEDIUM,\n    className = \"\",\n    style = {},\n    position = null,\n    selected = false\n  } = props;\n\n  const game = useGame();\n  const colors = getColors(game);\n  const color = hidden ? \"gray-light\" : card.color;\n\n  const number = hidden ? null : card.number;\n\n  const displayHints =\n    game.options.hintsLevel !== IGameHintsLevel.NONE &&\n    [\n      ICardContext.OTHER_PLAYER,\n      ICardContext.TARGETED_PLAYER,\n      ICardContext.SELF_PLAYER\n    ].includes(context);\n\n  if (selected) {\n    style.transform = \"scale(1.20)\";\n  }\n\n  return (\n    <CardWrapper\n      className={classnames({ \"bw1 z-5\": selected }, className)}\n      color={color}\n      context={context}\n      data-card={PositionMap[position]}\n      playable={playable}\n      size={size}\n      style={style}\n      onClick={onClick}\n    >\n      {/* Card value */}\n      <Txt\n        className={classnames(\"white outline-main-dark\", {\n          mb3: displayHints && size === CardSize.LARGE\n        })}\n        size={CardTextSizes[size]}\n        value={number}\n      />\n\n      {/* Card position */}\n      {position !== null && size === CardSize.LARGE && (\n        <Txt\n          className=\"absolute left-0 top-0 ma1 black-20\"\n          value={PositionMap[position]}\n        />\n      )}\n\n      {/* show positive hints with a larger type */}\n      {displayHints && hidden && (\n        <div\n          className={classnames(\n            \"top-0 br-100 w-50 h-50 flex justify-center items-center outline-main-dark\",\n            { [`bg-${card.color}`]: card.hint.color[card.color] === 2 },\n            { [`ba b--${card.color}`]: card.hint.color[card.color] === 2 }\n          )}\n        >\n          {card.hint.number[card.number] === 2 && <Txt value={card.number} />}\n        </div>\n      )}\n\n      {/* show other hints, including negative hints */}\n      {displayHints && size === CardSize.LARGE && (\n        <div className=\"flex absolute w-100 right-0 bottom-0 pv1 flex-l items-center flex-column bg-black-50\">\n          <div className=\"flex justify-around w-100\">\n            {colors.map(color => (\n              <Hint\n                key={color}\n                hint={card.hint.color[color]}\n                type=\"color\"\n                value={color}\n              />\n            ))}\n          </div>\n          <div\n            className=\"flex justify-around white mt1 mt2-l\"\n            style={{ width: `${(numbers.length / colors.length) * 100}%` }}\n          >\n            {numbers.map(number => (\n              <Hint\n                key={number}\n                hint={card.hint.number[number]}\n                type=\"number\"\n                value={number}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    </CardWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}