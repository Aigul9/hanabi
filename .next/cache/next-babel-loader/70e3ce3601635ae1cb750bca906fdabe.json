{"ast":null,"code":"var _jsxFileName = \"/Users/sarahmamy/Workspace/hanabi/src/components/playerGame.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport classnames from \"classnames\";\nimport React, { useState } from \"react\";\nimport Popover from \"react-popover\";\nimport Card, { CardSize, ICardContext, PositionMap } from \"./card\";\nimport PlayerName, { PlayerNameSize } from \"./playerName\";\nimport ReactionsPopover from \"./reactionsPopover\";\nimport Button from \"./ui/button\";\nimport Txt, { TxtSize } from \"./ui/txt\";\nimport Vignettes from \"./vignettes\";\nimport { isReplayMode, MaxHints } from \"../game/actions\";\nimport { playSound } from \"../game/sound\";\nimport { IGameStatus } from \"../game/state\";\nimport { useCurrentPlayer, useGame, useSelfPlayer } from \"../hooks/game\";\n\nfunction isCardHintable(hint, card) {\n  return hint.type === \"color\" ? card.color === hint.value : card.number === hint.value;\n}\n\nfunction textualHint(hint, cards) {\n  const hintableCards = cards.map((c, i) => isCardHintable(hint, c) ? i : null).filter(i => i !== null).map(i => PositionMap[i]);\n\n  if (hintableCards.length === 0) {\n    if (hint.type === \"color\") return `You have no ${hint.value} cards.`;else return `You have no ${hint.value}s.`;\n  }\n\n  if (hintableCards.length === 1) {\n    if (hint.type === \"color\") return `Your card ${hintableCards[0]} is ${hint.value}`;else return `Your card ${hintableCards[0]} is a ${hint.value}`;\n  }\n\n  if (hint.type === \"color\") return `Your cards ${hintableCards.join(\", \")} are ${hint.value}`;\n  return `Your cards ${hintableCards.join(\", \")} are ${hint.value}s`;\n}\n\nexport default function PlayerGame(props) {\n  const {\n    player,\n    self = false,\n    selected = false,\n    cardIndex,\n    onSelectPlayer,\n    onNotifyPlayer,\n    onCommitAction,\n    onCloseArea,\n    onReaction,\n    active\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"player\", \"self\", \"selected\", \"cardIndex\", \"onSelectPlayer\", \"onNotifyPlayer\", \"onCommitAction\", \"onCloseArea\", \"onReaction\", \"active\"]);\n\n  const game = useGame();\n  const {\n    0: reactionsOpen,\n    1: setReactionsOpen\n  } = useState(false);\n  const {\n    0: selectedCard,\n    1: selectCard\n  } = useState(cardIndex);\n  const {\n    0: pendingHint,\n    1: setPendingHint\n  } = useState({\n    type: null,\n    value: null\n  });\n  const selfPlayer = useSelfPlayer();\n  const currentPlayer = useCurrentPlayer();\n  const hideCards = (self || !selfPlayer) && (isReplayMode(game) || game.status !== IGameStatus.OVER);\n  const canPlay = [IGameStatus.ONGOING, IGameStatus.OVER].includes(game.status);\n  const hasSelectedCard = selectedCard !== null;\n  const cardContext = selected ? ICardContext.TARGETED_PLAYER : self ? ICardContext.SELF_PLAYER : ICardContext.OTHER_PLAYER;\n  return __jsx(React.Fragment, null, __jsx(\"div\", _extends({\n    className: classnames(\"cards flex justify-between bg-main-dark pa2 pv3 relative\", {\n      \"flex-column\": selected\n    }),\n    onClick: () => {\n      if (!selected) onSelectPlayer(player, 0);\n    }\n  }, attributes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"flex items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex flex-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, !selected && player === selfPlayer && player === currentPlayer && __jsx(Txt, {\n    className: \"yellow absolute top-0 mt1\",\n    id: \"your-turn\",\n    size: TxtSize.SMALL,\n    value: \"Your turn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classnames(\"flex items-center\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, player === currentPlayer && __jsx(Txt, {\n    className: \"yellow mr1\",\n    size: TxtSize.SMALL,\n    value: \"\\u27A4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), __jsx(PlayerName, {\n    className: \"mr2\",\n    explicit: true,\n    player: player,\n    size: PlayerNameSize.MEDIUM,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }))), !self && player.reaction && __jsx(Txt, {\n    style: {\n      animation: \"FontPulse 600ms 5\"\n    },\n    value: player.reaction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), self && !isReplayMode(game) && __jsx(Popover, {\n    body: __jsx(ReactionsPopover, {\n      onClose: () => setReactionsOpen(false),\n      onReaction: onReaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }),\n    className: \"z-999\",\n    isOpen: reactionsOpen,\n    onOuterAction: () => setReactionsOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"pointer grow\",\n    onClick: e => {\n      e.stopPropagation();\n      setReactionsOpen(!reactionsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, player.reaction && __jsx(Txt, {\n    style: {\n      animation: \"FontPulse 600ms 5\"\n    },\n    value: player.reaction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), !player.reaction && __jsx(Txt, {\n    style: {\n      filter: \"grayscale(100%)\"\n    },\n    value: \"\\uFE0E\\uFE0E\\uFE0E\\uFE0E\\uD83D\\uDE0A\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }))), active && !self && !player.notified && !player.bot && __jsx(\"a\", {\n    className: \"ml1 ml4-l\",\n    onClick: e => {\n      e.stopPropagation();\n      onNotifyPlayer(player);\n      playSound(`/static/sounds/bell.mp3`);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, __jsx(Txt, {\n    value: \"\\uD83D\\uDD14\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  })), selected && __jsx(\"a\", {\n    className: \"absolute top-0 right-0 mt3 mr3\" // className={classnames({ ml2: player.reaction || self })}\n    ,\n    onClick: () => onCloseArea(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, __jsx(Txt, {\n    value: \"\\xD7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: classnames(\"flex justify-end flex-grow-1 dib\", {\n      mt2: selected\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, player.hand.map((card, i) => __jsx(Card, {\n    key: i,\n    card: card,\n    className: classnames({\n      ma1: selected,\n      \"mr1 mr2-l\": i < player.hand.length - 1\n    }),\n    context: cardContext,\n    hidden: hideCards,\n    position: i,\n    selected: selected && (player === selfPlayer ? selectedCard === i : isCardHintable(pendingHint, card)),\n    size: selected ? CardSize.LARGE : CardSize.MEDIUM,\n    style: _objectSpread({}, selected && {\n      transition: \"all 50ms ease-in-out\"\n    }),\n    onClick: e => {\n      e.stopPropagation();\n      onSelectPlayer(player, i);\n\n      if (player === selfPlayer) {\n        selectCard(i);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    style: _objectSpread({\n      transform: \"translateY(0)\",\n      transition: \"transform 150ms ease-in-out\"\n    }, !selected && {\n      opacity: 0,\n      transform: \"translateY(-100px)\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, canPlay && selected && player === selfPlayer && __jsx(\"div\", {\n    className: \"flex flex-column items-end mb2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex justify-end items-center h-100-l\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, hasSelectedCard && __jsx(Txt, {\n    className: \"pb1 pb2-l ml1 mb2 mr3 ml2-l\",\n    value: `Card ${PositionMap[selectedCard]} selected`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }), hasSelectedCard && __jsx(\"div\", {\n    className: \"flex flex pb2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, [\"discard\", \"play\"].map(action => __jsx(Button, {\n    key: action,\n    className: \"mr2\",\n    disabled: action === \"discard\" && game.tokens.hints === 8,\n    id: action,\n    text: action,\n    onClick: () => onCommitAction({\n      action,\n      from: selfPlayer.index,\n      cardIndex: selectedCard\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  })))), hasSelectedCard && game.tokens.hints === MaxHints && __jsx(Txt, {\n    className: \"orange mr2 flex flex-column items-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"8 tokens\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, \"You cannot discard\")))), __jsx(\"div\", {\n    style: _objectSpread({\n      opacity: 1,\n      transform: \"translateY(0)\",\n      transition: \"all 150ms ease-in-out\"\n    }, !selected && {\n      opacity: 0,\n      transform: \"translateY(-100px)\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, canPlay && selected && player !== selfPlayer && __jsx(\"div\", {\n    className: \"flex flex-column items-end pb2 mr2 mb2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, __jsx(Vignettes, {\n    pendingHint: pendingHint,\n    onSelect: action => setPendingHint(action),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"mt2 flex items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, pendingHint.value && game.tokens.hints !== 0 && __jsx(Txt, {\n    italic: true,\n    className: \"mr3\",\n    value: textualHint(pendingHint, player.hand),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }), game.tokens.hints === 0 && __jsx(Txt, {\n    className: \"mr3 orange\",\n    value: \"No tokens left to hint\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }), __jsx(Button, {\n    disabled: !pendingHint.type || game.tokens.hints === 0,\n    id: \"give-hint\",\n    text: \"Hint\",\n    onClick: () => onCommitAction(_objectSpread({\n      action: \"hint\",\n      from: currentPlayer.index,\n      to: player.index\n    }, pendingHint)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/components/playerGame.tsx"],"names":["classnames","React","useState","Popover","Card","CardSize","ICardContext","PositionMap","PlayerName","PlayerNameSize","ReactionsPopover","Button","Txt","TxtSize","Vignettes","isReplayMode","MaxHints","playSound","IGameStatus","useCurrentPlayer","useGame","useSelfPlayer","isCardHintable","hint","card","type","color","value","number","textualHint","cards","hintableCards","map","c","i","filter","length","join","PlayerGame","props","player","self","selected","cardIndex","onSelectPlayer","onNotifyPlayer","onCommitAction","onCloseArea","onReaction","active","attributes","game","reactionsOpen","setReactionsOpen","selectedCard","selectCard","pendingHint","setPendingHint","selfPlayer","currentPlayer","hideCards","status","OVER","canPlay","ONGOING","includes","hasSelectedCard","cardContext","TARGETED_PLAYER","SELF_PLAYER","OTHER_PLAYER","SMALL","MEDIUM","reaction","animation","e","stopPropagation","notified","bot","mt2","hand","ma1","LARGE","transition","transform","opacity","action","tokens","hints","from","index","to"],"mappings":"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","sourcesContent":["import classnames from \"classnames\";\nimport React, { HTMLAttributes, useState } from \"react\";\nimport Popover from \"react-popover\";\n\nimport Card, { CardSize, ICardContext, PositionMap } from \"~/components/card\";\nimport PlayerName, { PlayerNameSize } from \"~/components/playerName\";\nimport ReactionsPopover from \"~/components/reactionsPopover\";\nimport Button from \"~/components/ui/button\";\nimport Txt, { TxtSize } from \"~/components/ui/txt\";\nimport Vignettes from \"~/components/vignettes\";\nimport { isReplayMode, MaxHints } from \"~/game/actions\";\nimport { playSound } from \"~/game/sound\";\nimport { ICard, IGameStatus, IHintAction, IPlayer } from \"~/game/state\";\nimport { useCurrentPlayer, useGame, useSelfPlayer } from \"~/hooks/game\";\n\nfunction isCardHintable(hint: IHintAction, card: ICard) {\n  return hint.type === \"color\"\n    ? card.color === hint.value\n    : card.number === hint.value;\n}\n\nfunction textualHint(hint: IHintAction, cards: ICard[]) {\n  const hintableCards = cards\n    .map((c, i) => (isCardHintable(hint, c) ? i : null))\n    .filter(i => i !== null)\n    .map(i => PositionMap[i]);\n\n  if (hintableCards.length === 0) {\n    if (hint.type === \"color\") return `You have no ${hint.value} cards.`;\n    else return `You have no ${hint.value}s.`;\n  }\n\n  if (hintableCards.length === 1) {\n    if (hint.type === \"color\")\n      return `Your card ${hintableCards[0]} is ${hint.value}`;\n    else return `Your card ${hintableCards[0]} is a ${hint.value}`;\n  }\n\n  if (hint.type === \"color\")\n    return `Your cards ${hintableCards.join(\", \")} are ${hint.value}`;\n\n  return `Your cards ${hintableCards.join(\", \")} are ${hint.value}s`;\n}\n\ninterface Props extends HTMLAttributes<HTMLElement> {\n  player: IPlayer;\n  selected: boolean;\n  active?: boolean;\n  self?: boolean;\n  cardIndex?: number;\n  onSelectPlayer: Function;\n  onNotifyPlayer?: Function;\n  onReaction?: Function;\n  onCommitAction: Function;\n  onCloseArea: Function;\n}\n\nexport default function PlayerGame(props: Props) {\n  const {\n    player,\n    self = false,\n    selected = false,\n    cardIndex,\n    onSelectPlayer,\n    onNotifyPlayer,\n    onCommitAction,\n    onCloseArea,\n    onReaction,\n    active,\n    ...attributes\n  } = props;\n\n  const game = useGame();\n  const [reactionsOpen, setReactionsOpen] = useState(false);\n  const [selectedCard, selectCard] = useState<number>(cardIndex);\n  const [pendingHint, setPendingHint] = useState<IHintAction>({\n    type: null,\n    value: null\n  } as IHintAction);\n\n  const selfPlayer = useSelfPlayer();\n  const currentPlayer = useCurrentPlayer();\n  const hideCards =\n    (self || !selfPlayer) &&\n    (isReplayMode(game) || game.status !== IGameStatus.OVER);\n  const canPlay = [IGameStatus.ONGOING, IGameStatus.OVER].includes(game.status);\n\n  const hasSelectedCard = selectedCard !== null;\n  const cardContext = selected\n    ? ICardContext.TARGETED_PLAYER\n    : self\n    ? ICardContext.SELF_PLAYER\n    : ICardContext.OTHER_PLAYER;\n\n  return (\n    <>\n      <div\n        className={classnames(\n          \"cards flex justify-between bg-main-dark pa2 pv3 relative\",\n          { \"flex-column\": selected }\n        )}\n        onClick={() => {\n          if (!selected) onSelectPlayer(player, 0);\n        }}\n        {...attributes}\n      >\n        <div className=\"flex items-center\">\n          <div className=\"flex flex-column\">\n            {!selected && player === selfPlayer && player === currentPlayer && (\n              <Txt\n                className=\"yellow absolute top-0 mt1\"\n                id=\"your-turn\"\n                size={TxtSize.SMALL}\n                value=\"Your turn\"\n              />\n            )}\n            <div className={classnames(\"flex items-center\")}>\n              {player === currentPlayer && (\n                <Txt className=\"yellow mr1\" size={TxtSize.SMALL} value=\"➤\" />\n              )}\n              <PlayerName\n                className=\"mr2\"\n                explicit={true}\n                player={player}\n                size={PlayerNameSize.MEDIUM}\n              />\n            </div>\n          </div>\n\n          {!self && player.reaction && (\n            <Txt\n              style={{\n                animation: \"FontPulse 600ms 5\"\n              }}\n              value={player.reaction}\n            />\n          )}\n\n          {self && !isReplayMode(game) && (\n            <Popover\n              body={\n                <ReactionsPopover\n                  onClose={() => setReactionsOpen(false)}\n                  onReaction={onReaction}\n                />\n              }\n              className=\"z-999\"\n              isOpen={reactionsOpen}\n              onOuterAction={() => setReactionsOpen(false)}\n            >\n              <a\n                className=\"pointer grow\"\n                onClick={e => {\n                  e.stopPropagation();\n                  setReactionsOpen(!reactionsOpen);\n                }}\n              >\n                {player.reaction && (\n                  <Txt\n                    style={{\n                      animation: \"FontPulse 600ms 5\"\n                    }}\n                    value={player.reaction}\n                  />\n                )}\n                {!player.reaction && (\n                  <Txt style={{ filter: \"grayscale(100%)\" }} value=\"︎︎︎︎😊\" />\n                )}\n              </a>\n            </Popover>\n          )}\n\n          {active && !self && !player.notified && !player.bot && (\n            <a\n              className=\"ml1 ml4-l\"\n              onClick={e => {\n                e.stopPropagation();\n                onNotifyPlayer(player);\n                playSound(`/static/sounds/bell.mp3`);\n              }}\n            >\n              <Txt value=\"🔔\" />\n            </a>\n          )}\n\n          {selected && (\n            <a\n              className=\"absolute top-0 right-0 mt3 mr3\"\n              // className={classnames({ ml2: player.reaction || self })}\n              onClick={() => onCloseArea()}\n            >\n              <Txt value=\"×\" />\n            </a>\n          )}\n        </div>\n\n        <div\n          className={classnames(\"flex justify-end flex-grow-1 dib\", {\n            mt2: selected\n          })}\n        >\n          {player.hand.map((card, i) => (\n            <Card\n              key={i}\n              card={card}\n              className={classnames({\n                ma1: selected,\n                \"mr1 mr2-l\": i < player.hand.length - 1\n              })}\n              context={cardContext}\n              hidden={hideCards}\n              position={i}\n              selected={\n                selected &&\n                (player === selfPlayer\n                  ? selectedCard === i\n                  : isCardHintable(pendingHint, card))\n              }\n              size={selected ? CardSize.LARGE : CardSize.MEDIUM}\n              style={{\n                ...(selected && { transition: \"all 50ms ease-in-out\" })\n              }}\n              onClick={e => {\n                e.stopPropagation();\n                onSelectPlayer(player, i);\n                if (player === selfPlayer) {\n                  selectCard(i);\n                }\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Self player actions */}\n      <div\n        style={{\n          transform: \"translateY(0)\",\n          transition: \"transform 150ms ease-in-out\",\n          ...(!selected && { opacity: 0, transform: \"translateY(-100px)\" })\n        }}\n      >\n        {canPlay && selected && player === selfPlayer && (\n          <div className=\"flex flex-column items-end mb2\">\n            <div className=\"flex justify-end items-center h-100-l\">\n              {hasSelectedCard && (\n                <Txt\n                  className=\"pb1 pb2-l ml1 mb2 mr3 ml2-l\"\n                  value={`Card ${PositionMap[selectedCard]} selected`}\n                />\n              )}\n\n              {hasSelectedCard && (\n                <div className=\"flex flex pb2\">\n                  {[\"discard\", \"play\"].map(action => (\n                    <Button\n                      key={action}\n                      className=\"mr2\"\n                      disabled={action === \"discard\" && game.tokens.hints === 8}\n                      id={action}\n                      text={action}\n                      onClick={() =>\n                        onCommitAction({\n                          action,\n                          from: selfPlayer.index,\n                          cardIndex: selectedCard\n                        })\n                      }\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n            {hasSelectedCard && game.tokens.hints === MaxHints && (\n              <Txt className=\"orange mr2 flex flex-column items-end\">\n                <span>8 tokens</span>\n                <span>You cannot discard</span>\n              </Txt>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Other player actions */}\n      <div\n        style={{\n          opacity: 1,\n          transform: \"translateY(0)\",\n          transition: \"all 150ms ease-in-out\",\n          ...(!selected && { opacity: 0, transform: \"translateY(-100px)\" })\n        }}\n      >\n        {canPlay && selected && player !== selfPlayer && (\n          <div className=\"flex flex-column items-end pb2 mr2 mb2\">\n            <Vignettes\n              pendingHint={pendingHint}\n              onSelect={action => setPendingHint(action)}\n            />\n\n            <div className=\"mt2 flex items-center\">\n              {pendingHint.value && game.tokens.hints !== 0 && (\n                <Txt\n                  italic\n                  className=\"mr3\"\n                  value={textualHint(pendingHint, player.hand)}\n                />\n              )}\n              {game.tokens.hints === 0 && (\n                <Txt className=\"mr3 orange\" value=\"No tokens left to hint\" />\n              )}\n\n              <Button\n                disabled={!pendingHint.type || game.tokens.hints === 0}\n                id=\"give-hint\"\n                text=\"Hint\"\n                onClick={() =>\n                  onCommitAction({\n                    action: \"hint\",\n                    from: currentPlayer.index,\n                    to: player.index,\n                    ...pendingHint\n                  })\n                }\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}