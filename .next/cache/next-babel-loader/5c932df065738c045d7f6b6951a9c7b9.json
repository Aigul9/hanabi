{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport function playSound(path) {\n  return _regeneratorRuntime.async(function playSound$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          new Audio(path).play()[\"catch\"](function (e) {\n            // Playing a sound before any user interaction triggers an error\n            // Prevent it from polluting the error logs\n            // @see https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n            if (e.name === \"NotAllowedError\") {\n              return;\n            }\n\n            throw e;\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/game/sound.ts"],"names":["playSound","path","Audio","play","e","name"],"mappings":";AAAA,OAAO,SAAeA,SAAf,CAAyBC,IAAzB;AAAA;AAAA;AAAA;AAAA;AACL,cAAIC,KAAJ,CAAUD,IAAV,EAAgBE,IAAhB,YAA6B,UAAAC,CAAC,EAAI;AAChC;AACA;AACA;AACA,gBAAIA,CAAC,CAACC,IAAF,KAAW,iBAAf,EAAkC;AAChC;AACD;;AAED,kBAAMD,CAAN;AACD,WATD;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export async function playSound(path: string) {\n  new Audio(path).play().catch(e => {\n    // Playing a sound before any user interaction triggers an error\n    // Prevent it from polluting the error logs\n    // @see https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n    if (e.name === \"NotAllowedError\") {\n      return;\n    }\n\n    throw e;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}