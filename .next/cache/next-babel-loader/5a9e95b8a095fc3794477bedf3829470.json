{"ast":null,"code":"import React, { useContext } from \"react\";\nexport const NetworkContext = React.createContext(null);\nexport default function useNetwork() {\n  return useContext(NetworkContext);\n}","map":{"version":3,"sources":["/Users/sarahmamy/Workspace/hanabi/src/hooks/network.ts"],"names":["React","useContext","NetworkContext","createContext","useNetwork"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAIA,OAAO,MAAMC,cAAc,GAAGF,KAAK,CAACG,aAAN,CAA6B,IAA7B,CAAvB;AA4BP,eAAe,SAASC,UAAT,GAAsB;AACnC,SAAOH,UAAU,CAACC,cAAD,CAAjB;AACD","sourcesContent":["import React, { useContext } from \"react\";\n\nimport IGameState, { IPlayer } from \"~/game/state\";\n\nexport const NetworkContext = React.createContext<Network>(null);\n\nexport type GamesHandler = (games: IGameState[]) => void;\n\nexport type GameHandler = (game: IGameState) => void;\n\nexport type UnsubscribeHandler = () => void;\n\nexport interface Network {\n  subscribeToPublicGames(callback: GamesHandler): UnsubscribeHandler;\n\n  subscribeToGame(gameId: string, callback: GameHandler): UnsubscribeHandler;\n\n  updateGame(game: IGameState): Promise<void>;\n\n  setReaction(\n    game: IGameState,\n    player: IPlayer,\n    reaction: string\n  ): Promise<void>;\n\n  setNotification(\n    game: IGameState,\n    player: IPlayer,\n    notified: boolean\n  ): Promise<void>;\n}\n\nexport default function useNetwork() {\n  return useContext(NetworkContext);\n}\n"]},"metadata":{},"sourceType":"module"}